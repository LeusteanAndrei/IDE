Temporary file created: C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
LSP process started successfully.
Request sent with method initialize
Handling response from LSP
Received response: {
    "id": 0,
    "jsonrpc": "2.0",
    "result": {
        "capabilities": {
            "astProvider": true,
            "callHierarchyProvider": true,
            "clangdInlayHintsProvider": true,
            "codeActionProvider": true,
            "compilationDatabase": {
                "automaticReload": true
            },
            "completionProvider": {
                "resolveProvider": false,
                "triggerCharacters": [
                    ".",
                    "<",
                    ">",
                    ":",
                    "\"",
                    "/",
                    "*"
                ]
            },
            "declarationProvider": true,
            "definitionProvider": true,
            "documentFormattingProvider": true,
            "documentHighlightProvider": true,
            "documentLinkProvider": {
                "resolveProvider": false
            },
            "documentOnTypeFormattingProvider": {
                "firstTriggerCharacter": "\n",
                "moreTriggerCharacter": []
            },
            "documentRangeFormattingProvider": true,
            "documentSymbolProvider": true,
            "executeCommandProvider": {
                "commands": [
                    "clangd.applyFix",
                    "clangd.applyRename",
                    "clangd.applyTweak"
                ]
            },
            "foldingRangeProvider": true,
            "hoverProvider": true,
            "implementationProvider": true,
            "inactiveRegionsProvider": true,
            "inlayHintProvider": true,
            "memoryUsageProvider": true,
            "referencesProvider": true,
            "renameProvider": true,
            "selectionRangeProvider": true,
            "semanticTokensProvider": {
                "full": {
                    "delta": true
                },
                "legend": {
                    "tokenModifiers": [
                        "declaration",
                        "definition",
                        "deprecated",
                        "deduced",
                        "readonly",
                        "static",
                        "abstract",
                        "virtual",
                        "dependentName",
                        "defaultLibrary",
                        "usedAsMutableReference",
                        "usedAsMutablePointer",
                        "constructorOrDestructor",
                        "userDefined",
                        "functionScope",
                        "classScope",
                        "fileScope",
                        "globalScope"
                    ],
                    "tokenTypes": [
                        "variable",
                        "variable",
                        "parameter",
                        "function",
                        "method",
                        "function",
                        "property",
                        "variable",
                        "class",
                        "interface",
                        "enum",
                        "enumMember",
                        "type",
                        "type",
                        "unknown",
                        "namespace",
                        "typeParameter",
                        "concept",
                        "type",
                        "macro",
                        "modifier",
                        "operator",
                        "bracket",
                        "label",
                        "comment"
                    ]
                },
                "range": false
            },
            "signatureHelpProvider": {
                "triggerCharacters": [
                    "(",
                    ")",
                    "{",
                    "}",
                    "<",
                    ">",
                    ","
                ]
            },
            "standardTypeHierarchyProvider": true,
            "textDocumentSync": {
                "change": 2,
                "openClose": true,
                "save": true
            },
            "typeDefinitionProvider": true,
            "typeHierarchyProvider": true,
            "workspaceSymbolProvider": true
        },
        "serverInfo": {
            "name": "clangd",
            "version": "clangd version 20.1.0 windows x86_64-pc-windows-msvc"
        }
    }
}
LSP initialized successfully.
Request sent with method textDocument/didOpen
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 0
    }
}
Diagnostics received from LSP.
Errors received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": true,
        "items": [
            {
                "filterText": "size_t",
                "insertText": "size_t",
                "insertTextFormat": 1,
                "kind": 8,
                "label": " size_t",
                "score": 1.5456733703613281,
                "sortText": "403a2760size_t",
                "textEdit": {
                    "newText": "size_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "type_info",
                "insertText": "type_info",
                "insertTextFormat": 1,
                "kind": 7,
                "label": " type_info",
                "score": 1.0411033630371094,
                "sortText": "407abd20type_info",
                "textEdit": {
                    "newText": "type_info",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Nonnull",
                "insertText": "_Nonnull",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nonnull",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nonnull",
                "textEdit": {
                    "newText": "_Nonnull",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Null_unspecified",
                "insertText": "_Null_unspecified",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Null_unspecified",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Null_unspecified",
                "textEdit": {
                    "newText": "_Null_unspecified",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Nullable",
                "insertText": "_Nullable",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nullable",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nullable",
                "textEdit": {
                    "newText": "_Nullable",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "alignas",
                "insertText": "alignas",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignas(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aalignas",
                "textEdit": {
                    "newText": "alignas",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "asm",
                "insertText": "asm",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " asm(string-literal)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aasm",
                "textEdit": {
                    "newText": "asm",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "auto",
                "insertText": "auto",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " auto",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aauto",
                "textEdit": {
                    "newText": "auto",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "bool",
                "insertText": "bool",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " bool",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7abool",
                "textEdit": {
                    "newText": "bool",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "char",
                "insertText": "char",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar",
                "textEdit": {
                    "newText": "char",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "char16_t",
                "insertText": "char16_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char16_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar16_t",
                "textEdit": {
                    "newText": "char16_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "char32_t",
                "insertText": "char32_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char32_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar32_t",
                "textEdit": {
                    "newText": "char32_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "class",
                "insertText": "class",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " class",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aclass",
                "textEdit": {
                    "newText": "class",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "const",
                "insertText": "const",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " const",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconst",
                "textEdit": {
                    "newText": "const",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "constexpr",
                "insertText": "constexpr",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " constexpr",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconstexpr",
                "textEdit": {
                    "newText": "constexpr",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "decltype",
                "insertText": "decltype",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " decltype(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adecltype",
                "textEdit": {
                    "newText": "decltype",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "double",
                "insertText": "double",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " double",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adouble",
                "textEdit": {
                    "newText": "double",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "enum",
                "insertText": "enum",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " enum",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aenum",
                "textEdit": {
                    "newText": "enum",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "extern",
                "insertText": "extern",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " extern",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aextern",
                "textEdit": {
                    "newText": "extern",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "float",
                "insertText": "float",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " float",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7afloat",
                "textEdit": {
                    "newText": "float",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "inline",
                "insertText": "inline",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " inline",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ainline",
                "textEdit": {
                    "newText": "inline",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "int",
                "insertText": "int",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " int",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aint",
                "textEdit": {
                    "newText": "int",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "long",
                "insertText": "long",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " long",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7along",
                "textEdit": {
                    "newText": "long",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "namespace",
                "insertText": "namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " namespace name = namespace;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7anamespace",
                "textEdit": {
                    "newText": "namespace",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "operator",
                "insertText": "operator",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " operator",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aoperator",
                "textEdit": {
                    "newText": "operator",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "short",
                "insertText": "short",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " short",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ashort",
                "textEdit": {
                    "newText": "short",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "signed",
                "insertText": "signed",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " signed",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7asigned",
                "textEdit": {
                    "newText": "signed",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "static",
                "insertText": "static",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " static",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic",
                "textEdit": {
                    "newText": "static",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "struct",
                "insertText": "struct",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " struct",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astruct",
                "textEdit": {
                    "newText": "struct",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "thread_local",
                "insertText": "thread_local",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " thread_local",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7athread_local",
                "textEdit": {
                    "newText": "thread_local",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "typedef",
                "insertText": "typedef",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typedef type name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypedef",
                "textEdit": {
                    "newText": "typedef",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "typename",
                "insertText": "typename",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typename name",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypename",
                "textEdit": {
                    "newText": "typename",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "union",
                "insertText": "union",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " union",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunion",
                "textEdit": {
                    "newText": "union",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "unsigned",
                "insertText": "unsigned",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " unsigned",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunsigned",
                "textEdit": {
                    "newText": "unsigned",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using name = type;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using qualifier::name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "using namespace",
                "insertText": "using namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using namespace identifier;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing namespace",
                "textEdit": {
                    "newText": "using namespace",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "void",
                "insertText": "void",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " void",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avoid",
                "textEdit": {
                    "newText": "void",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "volatile",
                "insertText": "volatile",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " volatile",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avolatile",
                "textEdit": {
                    "newText": "volatile",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "wchar_t",
                "insertText": "wchar_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " wchar_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7awchar_t",
                "textEdit": {
                    "newText": "wchar_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_CPPRTTI",
                "insertText": "_CPPRTTI",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _CPPRTTI",
                "score": 0.2504332661628723,
                "sortText": "417fc736_CPPRTTI",
                "textEdit": {
                    "newText": "_CPPRTTI",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_CPPUNWIND",
                "insertText": "_CPPUNWIND",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _CPPUNWIND",
                "score": 0.2504332661628723,
                "sortText": "417fc736_CPPUNWIND",
                "textEdit": {
                    "newText": "_CPPUNWIND",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_HAS_CHAR16_T_LANGUAGE_SUPPORT",
                "insertText": "_HAS_CHAR16_T_LANGUAGE_SUPPORT",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _HAS_CHAR16_T_LANGUAGE_SUPPORT",
                "score": 0.2504332661628723,
                "sortText": "417fc736_HAS_CHAR16_T_LANGUAGE_SUPPORT",
                "textEdit": {
                    "newText": "_HAS_CHAR16_T_LANGUAGE_SUPPORT",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_INTEGRAL_MAX_BITS",
                "insertText": "_INTEGRAL_MAX_BITS",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _INTEGRAL_MAX_BITS",
                "score": 0.2504332661628723,
                "sortText": "417fc736_INTEGRAL_MAX_BITS",
                "textEdit": {
                    "newText": "_INTEGRAL_MAX_BITS",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_MSC_BUILD",
                "insertText": "_MSC_BUILD",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _MSC_BUILD",
                "score": 0.2504332661628723,
                "sortText": "417fc736_MSC_BUILD",
                "textEdit": {
                    "newText": "_MSC_BUILD",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_MSC_EXTENSIONS",
                "insertText": "_MSC_EXTENSIONS",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _MSC_EXTENSIONS",
                "score": 0.2504332661628723,
                "sortText": "417fc736_MSC_EXTENSIONS",
                "textEdit": {
                    "newText": "_MSC_EXTENSIONS",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_MSC_FULL_VER",
                "insertText": "_MSC_FULL_VER",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _MSC_FULL_VER",
                "score": 0.2504332661628723,
                "sortText": "417fc736_MSC_FULL_VER",
                "textEdit": {
                    "newText": "_MSC_FULL_VER",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_MSC_VER",
                "insertText": "_MSC_VER",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _MSC_VER",
                "score": 0.2504332661628723,
                "sortText": "417fc736_MSC_VER",
                "textEdit": {
                    "newText": "_MSC_VER",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_MSVC_CONSTEXPR_ATTRIBUTE",
                "insertText": "_MSVC_CONSTEXPR_ATTRIBUTE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _MSVC_CONSTEXPR_ATTRIBUTE",
                "score": 0.2504332661628723,
                "sortText": "417fc736_MSVC_CONSTEXPR_ATTRIBUTE",
                "textEdit": {
                    "newText": "_MSVC_CONSTEXPR_ATTRIBUTE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_MSVC_EXECUTION_CHARACTER_SET",
                "insertText": "_MSVC_EXECUTION_CHARACTER_SET",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _MSVC_EXECUTION_CHARACTER_SET",
                "score": 0.2504332661628723,
                "sortText": "417fc736_MSVC_EXECUTION_CHARACTER_SET",
                "textEdit": {
                    "newText": "_MSVC_EXECUTION_CHARACTER_SET",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_MSVC_LANG",
                "insertText": "_MSVC_LANG",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _MSVC_LANG",
                "score": 0.2504332661628723,
                "sortText": "417fc736_MSVC_LANG",
                "textEdit": {
                    "newText": "_MSVC_LANG",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_M_AMD64",
                "insertText": "_M_AMD64",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _M_AMD64",
                "score": 0.2504332661628723,
                "sortText": "417fc736_M_AMD64",
                "textEdit": {
                    "newText": "_M_AMD64",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_M_FP_CONTRACT",
                "insertText": "_M_FP_CONTRACT",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _M_FP_CONTRACT",
                "score": 0.2504332661628723,
                "sortText": "417fc736_M_FP_CONTRACT",
                "textEdit": {
                    "newText": "_M_FP_CONTRACT",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_M_FP_PRECISE",
                "insertText": "_M_FP_PRECISE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _M_FP_PRECISE",
                "score": 0.2504332661628723,
                "sortText": "417fc736_M_FP_PRECISE",
                "textEdit": {
                    "newText": "_M_FP_PRECISE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_M_X64",
                "insertText": "_M_X64",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _M_X64",
                "score": 0.2504332661628723,
                "sortText": "417fc736_M_X64",
                "textEdit": {
                    "newText": "_M_X64",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_NATIVE_NULLPTR_SUPPORTED",
                "insertText": "_NATIVE_NULLPTR_SUPPORTED",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _NATIVE_NULLPTR_SUPPORTED",
                "score": 0.2504332661628723,
                "sortText": "417fc736_NATIVE_NULLPTR_SUPPORTED",
                "textEdit": {
                    "newText": "_NATIVE_NULLPTR_SUPPORTED",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_NATIVE_WCHAR_T_DEFINED",
                "insertText": "_NATIVE_WCHAR_T_DEFINED",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _NATIVE_WCHAR_T_DEFINED",
                "score": 0.2504332661628723,
                "sortText": "417fc736_NATIVE_WCHAR_T_DEFINED",
                "textEdit": {
                    "newText": "_NATIVE_WCHAR_T_DEFINED",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Pragma",
                "insertText": "_Pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _Pragma",
                "score": 0.2504332661628723,
                "sortText": "417fc736_Pragma",
                "textEdit": {
                    "newText": "_Pragma",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_RVALUE_REFERENCES_SUPPORTED",
                "insertText": "_RVALUE_REFERENCES_SUPPORTED",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _RVALUE_REFERENCES_SUPPORTED",
                "score": 0.2504332661628723,
                "sortText": "417fc736_RVALUE_REFERENCES_SUPPORTED",
                "textEdit": {
                    "newText": "_RVALUE_REFERENCES_SUPPORTED",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_RVALUE_REFERENCES_V2_SUPPORTED",
                "insertText": "_RVALUE_REFERENCES_V2_SUPPORTED",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _RVALUE_REFERENCES_V2_SUPPORTED",
                "score": 0.2504332661628723,
                "sortText": "417fc736_RVALUE_REFERENCES_V2_SUPPORTED",
                "textEdit": {
                    "newText": "_RVALUE_REFERENCES_V2_SUPPORTED",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_WCHAR_T_DEFINED",
                "insertText": "_WCHAR_T_DEFINED",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _WCHAR_T_DEFINED",
                "score": 0.2504332661628723,
                "sortText": "417fc736_WCHAR_T_DEFINED",
                "textEdit": {
                    "newText": "_WCHAR_T_DEFINED",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_WIN32",
                "insertText": "_WIN32",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _WIN32",
                "score": 0.2504332661628723,
                "sortText": "417fc736_WIN32",
                "textEdit": {
                    "newText": "_WIN32",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_WIN64",
                "insertText": "_WIN64",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _WIN64",
                "score": 0.2504332661628723,
                "sortText": "417fc736_WIN64",
                "textEdit": {
                    "newText": "_WIN64",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__ATOMIC_ACQUIRE",
                "insertText": "__ATOMIC_ACQUIRE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __ATOMIC_ACQUIRE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__ATOMIC_ACQUIRE",
                "textEdit": {
                    "newText": "__ATOMIC_ACQUIRE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__ATOMIC_ACQ_REL",
                "insertText": "__ATOMIC_ACQ_REL",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __ATOMIC_ACQ_REL",
                "score": 0.2504332661628723,
                "sortText": "417fc736__ATOMIC_ACQ_REL",
                "textEdit": {
                    "newText": "__ATOMIC_ACQ_REL",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__ATOMIC_CONSUME",
                "insertText": "__ATOMIC_CONSUME",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __ATOMIC_CONSUME",
                "score": 0.2504332661628723,
                "sortText": "417fc736__ATOMIC_CONSUME",
                "textEdit": {
                    "newText": "__ATOMIC_CONSUME",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__ATOMIC_RELAXED",
                "insertText": "__ATOMIC_RELAXED",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __ATOMIC_RELAXED",
                "score": 0.2504332661628723,
                "sortText": "417fc736__ATOMIC_RELAXED",
                "textEdit": {
                    "newText": "__ATOMIC_RELAXED",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__ATOMIC_RELEASE",
                "insertText": "__ATOMIC_RELEASE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __ATOMIC_RELEASE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__ATOMIC_RELEASE",
                "textEdit": {
                    "newText": "__ATOMIC_RELEASE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__ATOMIC_SEQ_CST",
                "insertText": "__ATOMIC_SEQ_CST",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __ATOMIC_SEQ_CST",
                "score": 0.2504332661628723,
                "sortText": "417fc736__ATOMIC_SEQ_CST",
                "textEdit": {
                    "newText": "__ATOMIC_SEQ_CST",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__BASE_FILE__",
                "insertText": "__BASE_FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BASE_FILE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__BASE_FILE__",
                "textEdit": {
                    "newText": "__BASE_FILE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__BIGGEST_ALIGNMENT__",
                "insertText": "__BIGGEST_ALIGNMENT__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BIGGEST_ALIGNMENT__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__BIGGEST_ALIGNMENT__",
                "textEdit": {
                    "newText": "__BIGGEST_ALIGNMENT__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__BITINT_MAXWIDTH__",
                "insertText": "__BITINT_MAXWIDTH__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BITINT_MAXWIDTH__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__BITINT_MAXWIDTH__",
                "textEdit": {
                    "newText": "__BITINT_MAXWIDTH__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__BOOL_DEFINED",
                "insertText": "__BOOL_DEFINED",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BOOL_DEFINED",
                "score": 0.2504332661628723,
                "sortText": "417fc736__BOOL_DEFINED",
                "textEdit": {
                    "newText": "__BOOL_DEFINED",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__BOOL_WIDTH__",
                "insertText": "__BOOL_WIDTH__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BOOL_WIDTH__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__BOOL_WIDTH__",
                "textEdit": {
                    "newText": "__BOOL_WIDTH__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__BYTE_ORDER__",
                "insertText": "__BYTE_ORDER__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BYTE_ORDER__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__BYTE_ORDER__",
                "textEdit": {
                    "newText": "__BYTE_ORDER__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CHAR16_TYPE__",
                "insertText": "__CHAR16_TYPE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CHAR16_TYPE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CHAR16_TYPE__",
                "textEdit": {
                    "newText": "__CHAR16_TYPE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CHAR32_TYPE__",
                "insertText": "__CHAR32_TYPE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CHAR32_TYPE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CHAR32_TYPE__",
                "textEdit": {
                    "newText": "__CHAR32_TYPE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CHAR_BIT__",
                "insertText": "__CHAR_BIT__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CHAR_BIT__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CHAR_BIT__",
                "textEdit": {
                    "newText": "__CHAR_BIT__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CLANG_ATOMIC_BOOL_LOCK_FREE",
                "insertText": "__CLANG_ATOMIC_BOOL_LOCK_FREE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CLANG_ATOMIC_BOOL_LOCK_FREE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CLANG_ATOMIC_BOOL_LOCK_FREE",
                "textEdit": {
                    "newText": "__CLANG_ATOMIC_BOOL_LOCK_FREE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CLANG_ATOMIC_CHAR16_T_LOCK_FREE",
                "insertText": "__CLANG_ATOMIC_CHAR16_T_LOCK_FREE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CLANG_ATOMIC_CHAR16_T_LOCK_FREE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CLANG_ATOMIC_CHAR16_T_LOCK_FREE",
                "textEdit": {
                    "newText": "__CLANG_ATOMIC_CHAR16_T_LOCK_FREE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CLANG_ATOMIC_CHAR32_T_LOCK_FREE",
                "insertText": "__CLANG_ATOMIC_CHAR32_T_LOCK_FREE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CLANG_ATOMIC_CHAR32_T_LOCK_FREE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CLANG_ATOMIC_CHAR32_T_LOCK_FREE",
                "textEdit": {
                    "newText": "__CLANG_ATOMIC_CHAR32_T_LOCK_FREE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CLANG_ATOMIC_CHAR_LOCK_FREE",
                "insertText": "__CLANG_ATOMIC_CHAR_LOCK_FREE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CLANG_ATOMIC_CHAR_LOCK_FREE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CLANG_ATOMIC_CHAR_LOCK_FREE",
                "textEdit": {
                    "newText": "__CLANG_ATOMIC_CHAR_LOCK_FREE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CLANG_ATOMIC_INT_LOCK_FREE",
                "insertText": "__CLANG_ATOMIC_INT_LOCK_FREE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CLANG_ATOMIC_INT_LOCK_FREE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CLANG_ATOMIC_INT_LOCK_FREE",
                "textEdit": {
                    "newText": "__CLANG_ATOMIC_INT_LOCK_FREE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CLANG_ATOMIC_LLONG_LOCK_FREE",
                "insertText": "__CLANG_ATOMIC_LLONG_LOCK_FREE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CLANG_ATOMIC_LLONG_LOCK_FREE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CLANG_ATOMIC_LLONG_LOCK_FREE",
                "textEdit": {
                    "newText": "__CLANG_ATOMIC_LLONG_LOCK_FREE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CLANG_ATOMIC_LONG_LOCK_FREE",
                "insertText": "__CLANG_ATOMIC_LONG_LOCK_FREE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CLANG_ATOMIC_LONG_LOCK_FREE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CLANG_ATOMIC_LONG_LOCK_FREE",
                "textEdit": {
                    "newText": "__CLANG_ATOMIC_LONG_LOCK_FREE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CLANG_ATOMIC_POINTER_LOCK_FREE",
                "insertText": "__CLANG_ATOMIC_POINTER_LOCK_FREE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CLANG_ATOMIC_POINTER_LOCK_FREE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CLANG_ATOMIC_POINTER_LOCK_FREE",
                "textEdit": {
                    "newText": "__CLANG_ATOMIC_POINTER_LOCK_FREE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CLANG_ATOMIC_SHORT_LOCK_FREE",
                "insertText": "__CLANG_ATOMIC_SHORT_LOCK_FREE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CLANG_ATOMIC_SHORT_LOCK_FREE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CLANG_ATOMIC_SHORT_LOCK_FREE",
                "textEdit": {
                    "newText": "__CLANG_ATOMIC_SHORT_LOCK_FREE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CLANG_ATOMIC_WCHAR_T_LOCK_FREE",
                "insertText": "__CLANG_ATOMIC_WCHAR_T_LOCK_FREE",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CLANG_ATOMIC_WCHAR_T_LOCK_FREE",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CLANG_ATOMIC_WCHAR_T_LOCK_FREE",
                "textEdit": {
                    "newText": "__CLANG_ATOMIC_WCHAR_T_LOCK_FREE",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__CONSTANT_CFSTRINGS__",
                "insertText": "__CONSTANT_CFSTRINGS__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __CONSTANT_CFSTRINGS__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__CONSTANT_CFSTRINGS__",
                "textEdit": {
                    "newText": "__CONSTANT_CFSTRINGS__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__COUNTER__",
                "insertText": "__COUNTER__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __COUNTER__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__COUNTER__",
                "textEdit": {
                    "newText": "__COUNTER__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__DATE__",
                "insertText": "__DATE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DATE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DATE__",
                "textEdit": {
                    "newText": "__DATE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__DBL_DECIMAL_DIG__",
                "insertText": "__DBL_DECIMAL_DIG__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DBL_DECIMAL_DIG__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DBL_DECIMAL_DIG__",
                "textEdit": {
                    "newText": "__DBL_DECIMAL_DIG__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__DBL_DENORM_MIN__",
                "insertText": "__DBL_DENORM_MIN__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DBL_DENORM_MIN__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DBL_DENORM_MIN__",
                "textEdit": {
                    "newText": "__DBL_DENORM_MIN__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__DBL_DIG__",
                "insertText": "__DBL_DIG__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DBL_DIG__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DBL_DIG__",
                "textEdit": {
                    "newText": "__DBL_DIG__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__DBL_EPSILON__",
                "insertText": "__DBL_EPSILON__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DBL_EPSILON__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DBL_EPSILON__",
                "textEdit": {
                    "newText": "__DBL_EPSILON__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__DBL_HAS_DENORM__",
                "insertText": "__DBL_HAS_DENORM__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DBL_HAS_DENORM__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DBL_HAS_DENORM__",
                "textEdit": {
                    "newText": "__DBL_HAS_DENORM__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__DBL_HAS_INFINITY__",
                "insertText": "__DBL_HAS_INFINITY__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DBL_HAS_INFINITY__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DBL_HAS_INFINITY__",
                "textEdit": {
                    "newText": "__DBL_HAS_INFINITY__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['size_t', 'type_info', '_Nonnull', '_Null_unspecified', '_Nullable', 'alignas', 'asm', 'auto', 'bool', 'char', 'char16_t', 'char32_t', 'class', 'const', 'constexpr', 'decltype', 'double', 'enum', 'extern', 'float', 'inline', 'int', 'long', 'namespace', 'operator', 'short', 'signed', 'static', 'static_assert', 'struct', 'template', 'template', 'thread_local', 'typedef', 'typename', 'union', 'unsigned', 'using', 'using', 'using namespace', 'void', 'volatile', 'wchar_t', '_CPPRTTI', '_CPPUNWIND', '_HAS_CHAR16_T_LANGUAGE_SUPPORT', '_INTEGRAL_MAX_BITS', '_MSC_BUILD', '_MSC_EXTENSIONS', '_MSC_FULL_VER', '_MSC_VER', '_MSVC_CONSTEXPR_ATTRIBUTE', '_MSVC_EXECUTION_CHARACTER_SET', '_MSVC_LANG', '_M_AMD64', '_M_FP_CONTRACT', '_M_FP_PRECISE', '_M_X64', '_NATIVE_NULLPTR_SUPPORTED', '_NATIVE_WCHAR_T_DEFINED', '_Pragma', '_RVALUE_REFERENCES_SUPPORTED', '_RVALUE_REFERENCES_V2_SUPPORTED', '_WCHAR_T_DEFINED', '_WIN32', '_WIN64', '__ATOMIC_ACQUIRE', '__ATOMIC_ACQ_REL', '__ATOMIC_CONSUME', '__ATOMIC_RELAXED', '__ATOMIC_RELEASE', '__ATOMIC_SEQ_CST', '__BASE_FILE__', '__BIGGEST_ALIGNMENT__', '__BITINT_MAXWIDTH__', '__BOOL_DEFINED', '__BOOL_WIDTH__', '__BYTE_ORDER__', '__CHAR16_TYPE__', '__CHAR32_TYPE__', '__CHAR_BIT__', '__CLANG_ATOMIC_BOOL_LOCK_FREE', '__CLANG_ATOMIC_CHAR16_T_LOCK_FREE', '__CLANG_ATOMIC_CHAR32_T_LOCK_FREE', '__CLANG_ATOMIC_CHAR_LOCK_FREE', '__CLANG_ATOMIC_INT_LOCK_FREE', '__CLANG_ATOMIC_LLONG_LOCK_FREE', '__CLANG_ATOMIC_LONG_LOCK_FREE', '__CLANG_ATOMIC_POINTER_LOCK_FREE', '__CLANG_ATOMIC_SHORT_LOCK_FREE', '__CLANG_ATOMIC_WCHAR_T_LOCK_FREE', '__CONSTANT_CFSTRINGS__', '__COUNTER__', '__DATE__', '__DBL_DECIMAL_DIG__', '__DBL_DENORM_MIN__', '__DBL_DIG__', '__DBL_EPSILON__', '__DBL_HAS_DENORM__', '__DBL_HAS_INFINITY__']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "decltype",
                "insertText": "decltype",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " decltype(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adecltype",
                "textEdit": {
                    "newText": "decltype",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "double",
                "insertText": "double",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " double",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adouble",
                "textEdit": {
                    "newText": "double",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 0
                        },
                        "start": {
                            "character": 0,
                            "line": 0
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['decltype', 'double']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'D'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_unqualified_id",
                "message": "Expected unqualified-id",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 0
                    },
                    "start": {
                        "character": 1,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 4
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 1]], [0, [1, 1]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'D'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_unqualified_id",
                "message": "Expected unqualified-id",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 0
                    },
                    "start": {
                        "character": 1,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 4
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 1]], [0, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'DC'",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_unqualified_id",
                "message": "Expected unqualified-id",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 0
                    },
                    "start": {
                        "character": 2,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 5
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 2]], [0, [2, 2]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "size_t",
                "insertText": "size_t",
                "insertTextFormat": 1,
                "kind": 8,
                "label": " size_t",
                "score": 1.5456733703613281,
                "sortText": "403a2760size_t",
                "textEdit": {
                    "newText": "size_t",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "type_info",
                "insertText": "type_info",
                "insertTextFormat": 1,
                "kind": 7,
                "label": " type_info",
                "score": 1.0411033630371094,
                "sortText": "407abd20type_info",
                "textEdit": {
                    "newText": "type_info",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Nonnull",
                "insertText": "_Nonnull",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nonnull",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nonnull",
                "textEdit": {
                    "newText": "_Nonnull",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Null_unspecified",
                "insertText": "_Null_unspecified",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Null_unspecified",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Null_unspecified",
                "textEdit": {
                    "newText": "_Null_unspecified",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Nullable",
                "insertText": "_Nullable",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nullable",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nullable",
                "textEdit": {
                    "newText": "_Nullable",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "alignas",
                "insertText": "alignas",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignas(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aalignas",
                "textEdit": {
                    "newText": "alignas",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "asm",
                "insertText": "asm",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " asm(string-literal)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aasm",
                "textEdit": {
                    "newText": "asm",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "auto",
                "insertText": "auto",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " auto",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aauto",
                "textEdit": {
                    "newText": "auto",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "bool",
                "insertText": "bool",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " bool",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7abool",
                "textEdit": {
                    "newText": "bool",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "char",
                "insertText": "char",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar",
                "textEdit": {
                    "newText": "char",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "char16_t",
                "insertText": "char16_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char16_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar16_t",
                "textEdit": {
                    "newText": "char16_t",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "char32_t",
                "insertText": "char32_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char32_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar32_t",
                "textEdit": {
                    "newText": "char32_t",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "class",
                "insertText": "class",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " class",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aclass",
                "textEdit": {
                    "newText": "class",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "const",
                "insertText": "const",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " const",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconst",
                "textEdit": {
                    "newText": "const",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "constexpr",
                "insertText": "constexpr",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " constexpr",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconstexpr",
                "textEdit": {
                    "newText": "constexpr",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "decltype",
                "insertText": "decltype",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " decltype(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adecltype",
                "textEdit": {
                    "newText": "decltype",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "double",
                "insertText": "double",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " double",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adouble",
                "textEdit": {
                    "newText": "double",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "enum",
                "insertText": "enum",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " enum",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aenum",
                "textEdit": {
                    "newText": "enum",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "extern",
                "insertText": "extern",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " extern",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aextern",
                "textEdit": {
                    "newText": "extern",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "float",
                "insertText": "float",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " float",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7afloat",
                "textEdit": {
                    "newText": "float",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "inline",
                "insertText": "inline",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " inline",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ainline",
                "textEdit": {
                    "newText": "inline",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "int",
                "insertText": "int",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " int",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aint",
                "textEdit": {
                    "newText": "int",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "long",
                "insertText": "long",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " long",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7along",
                "textEdit": {
                    "newText": "long",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "namespace",
                "insertText": "namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " namespace name = namespace;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7anamespace",
                "textEdit": {
                    "newText": "namespace",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "operator",
                "insertText": "operator",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " operator",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aoperator",
                "textEdit": {
                    "newText": "operator",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "short",
                "insertText": "short",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " short",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ashort",
                "textEdit": {
                    "newText": "short",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "signed",
                "insertText": "signed",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " signed",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7asigned",
                "textEdit": {
                    "newText": "signed",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "static",
                "insertText": "static",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " static",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic",
                "textEdit": {
                    "newText": "static",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "struct",
                "insertText": "struct",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " struct",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astruct",
                "textEdit": {
                    "newText": "struct",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "thread_local",
                "insertText": "thread_local",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " thread_local",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7athread_local",
                "textEdit": {
                    "newText": "thread_local",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "typedef",
                "insertText": "typedef",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typedef type name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypedef",
                "textEdit": {
                    "newText": "typedef",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "typename",
                "insertText": "typename",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typename name",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypename",
                "textEdit": {
                    "newText": "typename",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "union",
                "insertText": "union",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " union",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunion",
                "textEdit": {
                    "newText": "union",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "unsigned",
                "insertText": "unsigned",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " unsigned",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunsigned",
                "textEdit": {
                    "newText": "unsigned",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using name = type;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using qualifier::name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "using namespace",
                "insertText": "using namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using namespace identifier;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing namespace",
                "textEdit": {
                    "newText": "using namespace",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "void",
                "insertText": "void",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " void",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avoid",
                "textEdit": {
                    "newText": "void",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "volatile",
                "insertText": "volatile",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " volatile",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avolatile",
                "textEdit": {
                    "newText": "volatile",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "wchar_t",
                "insertText": "wchar_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " wchar_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7awchar_t",
                "textEdit": {
                    "newText": "wchar_t",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Pragma",
                "insertText": "_Pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _Pragma",
                "score": 0.2504332661628723,
                "sortText": "417fc736_Pragma",
                "textEdit": {
                    "newText": "_Pragma",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__BASE_FILE__",
                "insertText": "__BASE_FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BASE_FILE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__BASE_FILE__",
                "textEdit": {
                    "newText": "__BASE_FILE__",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__COUNTER__",
                "insertText": "__COUNTER__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __COUNTER__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__COUNTER__",
                "textEdit": {
                    "newText": "__COUNTER__",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__DATE__",
                "insertText": "__DATE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DATE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DATE__",
                "textEdit": {
                    "newText": "__DATE__",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__FILE_NAME__",
                "insertText": "__FILE_NAME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE_NAME__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FILE_NAME__",
                "textEdit": {
                    "newText": "__FILE_NAME__",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__FILE__",
                "insertText": "__FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FILE__",
                "textEdit": {
                    "newText": "__FILE__",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__FLT_EVAL_METHOD__",
                "insertText": "__FLT_EVAL_METHOD__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FLT_EVAL_METHOD__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FLT_EVAL_METHOD__",
                "textEdit": {
                    "newText": "__FLT_EVAL_METHOD__",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__INCLUDE_LEVEL__",
                "insertText": "__INCLUDE_LEVEL__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __INCLUDE_LEVEL__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__INCLUDE_LEVEL__",
                "textEdit": {
                    "newText": "__INCLUDE_LEVEL__",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__LINE__",
                "insertText": "__LINE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __LINE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__LINE__",
                "textEdit": {
                    "newText": "__LINE__",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__TIMESTAMP__",
                "insertText": "__TIMESTAMP__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIMESTAMP__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__TIMESTAMP__",
                "textEdit": {
                    "newText": "__TIMESTAMP__",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__TIME__",
                "insertText": "__TIME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIME__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__TIME__",
                "textEdit": {
                    "newText": "__TIME__",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__building_module",
                "insertText": "__building_module",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __building_module",
                "score": 0.2504332661628723,
                "sortText": "417fc736__building_module",
                "textEdit": {
                    "newText": "__building_module",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_attribute",
                "insertText": "__has_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_attribute",
                "textEdit": {
                    "newText": "__has_attribute",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_builtin",
                "insertText": "__has_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_builtin",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_builtin",
                "textEdit": {
                    "newText": "__has_builtin",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_constexpr_builtin",
                "insertText": "__has_constexpr_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_constexpr_builtin",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_constexpr_builtin",
                "textEdit": {
                    "newText": "__has_constexpr_builtin",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_cpp_attribute",
                "insertText": "__has_cpp_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_cpp_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_cpp_attribute",
                "textEdit": {
                    "newText": "__has_cpp_attribute",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_declspec_attribute",
                "insertText": "__has_declspec_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_declspec_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_declspec_attribute",
                "textEdit": {
                    "newText": "__has_declspec_attribute",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_embed",
                "insertText": "__has_embed",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_embed",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_embed",
                "textEdit": {
                    "newText": "__has_embed",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_extension",
                "insertText": "__has_extension",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_extension",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_extension",
                "textEdit": {
                    "newText": "__has_extension",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_feature",
                "insertText": "__has_feature",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_feature",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_feature",
                "textEdit": {
                    "newText": "__has_feature",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_include",
                "insertText": "__has_include",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_include",
                "textEdit": {
                    "newText": "__has_include",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_include_next",
                "insertText": "__has_include_next",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include_next",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_include_next",
                "textEdit": {
                    "newText": "__has_include_next",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_warning",
                "insertText": "__has_warning",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_warning",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_warning",
                "textEdit": {
                    "newText": "__has_warning",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__identifier",
                "insertText": "__identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __identifier",
                "score": 0.2504332661628723,
                "sortText": "417fc736__identifier",
                "textEdit": {
                    "newText": "__identifier",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_identifier",
                "insertText": "__is_identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_identifier",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_identifier",
                "textEdit": {
                    "newText": "__is_identifier",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_arch",
                "insertText": "__is_target_arch",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_arch",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_arch",
                "textEdit": {
                    "newText": "__is_target_arch",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_environment",
                "insertText": "__is_target_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_environment",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_environment",
                "textEdit": {
                    "newText": "__is_target_environment",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_os",
                "insertText": "__is_target_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_os",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_os",
                "textEdit": {
                    "newText": "__is_target_os",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_environment",
                "insertText": "__is_target_variant_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_environment",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_variant_environment",
                "textEdit": {
                    "newText": "__is_target_variant_environment",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_os",
                "insertText": "__is_target_variant_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_os",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_variant_os",
                "textEdit": {
                    "newText": "__is_target_variant_os",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_vendor",
                "insertText": "__is_target_vendor",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_vendor",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_vendor",
                "textEdit": {
                    "newText": "__is_target_vendor",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__pragma",
                "insertText": "__pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __pragma",
                "score": 0.2504332661628723,
                "sortText": "417fc736__pragma",
                "textEdit": {
                    "newText": "__pragma",
                    "range": {
                        "end": {
                            "character": 5,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['size_t', 'type_info', '_Nonnull', '_Null_unspecified', '_Nullable', 'alignas', 'asm', 'auto', 'bool', 'char', 'char16_t', 'char32_t', 'class', 'const', 'constexpr', 'decltype', 'double', 'enum', 'extern', 'float', 'inline', 'int', 'long', 'namespace', 'operator', 'short', 'signed', 'static', 'static_assert', 'struct', 'template', 'template', 'thread_local', 'typedef', 'typename', 'union', 'unsigned', 'using', 'using', 'using namespace', 'void', 'volatile', 'wchar_t', '_Pragma', '__BASE_FILE__', '__COUNTER__', '__DATE__', '__FILE_NAME__', '__FILE__', '__FLT_EVAL_METHOD__', '__INCLUDE_LEVEL__', '__LINE__', '__TIMESTAMP__', '__TIME__', '__building_module', '__has_attribute', '__has_builtin', '__has_constexpr_builtin', '__has_cpp_attribute', '__has_declspec_attribute', '__has_embed', '__has_extension', '__has_feature', '__has_include', '__has_include_next', '__has_warning', '__identifier', '__is_identifier', '__is_target_arch', '__is_target_environment', '__is_target_os', '__is_target_variant_environment', '__is_target_variant_os', '__is_target_vendor', '__pragma']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "size_t",
                "insertText": "size_t",
                "insertTextFormat": 1,
                "kind": 8,
                "label": " size_t",
                "score": 1.5456733703613281,
                "sortText": "403a2760size_t",
                "textEdit": {
                    "newText": "size_t",
                    "range": {
                        "end": {
                            "character": 6,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "short",
                "insertText": "short",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " short",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ashort",
                "textEdit": {
                    "newText": "short",
                    "range": {
                        "end": {
                            "character": 6,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "signed",
                "insertText": "signed",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " signed",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7asigned",
                "textEdit": {
                    "newText": "signed",
                    "range": {
                        "end": {
                            "character": 6,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "static",
                "insertText": "static",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " static",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic",
                "textEdit": {
                    "newText": "static",
                    "range": {
                        "end": {
                            "character": 6,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 6,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "struct",
                "insertText": "struct",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " struct",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astruct",
                "textEdit": {
                    "newText": "struct",
                    "range": {
                        "end": {
                            "character": 6,
                            "line": 0
                        },
                        "start": {
                            "character": 5,
                            "line": 0
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['size_t', 'short', 'signed', 'static', 'static_assert', 'struct']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 6,
                        "line": 0
                    },
                    "start": {
                        "character": 6,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 9
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [0, [6, 6]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 0
                    },
                    "start": {
                        "character": 9,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 12
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [0, [9, 9]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "size_t",
                "insertText": "size_t",
                "insertTextFormat": 1,
                "kind": 8,
                "label": " size_t",
                "score": 1.5456733703613281,
                "sortText": "403a2760size_t",
                "textEdit": {
                    "newText": "size_t",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "type_info",
                "insertText": "type_info",
                "insertTextFormat": 1,
                "kind": 7,
                "label": " type_info",
                "score": 1.0411033630371094,
                "sortText": "407abd20type_info",
                "textEdit": {
                    "newText": "type_info",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Nonnull",
                "insertText": "_Nonnull",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nonnull",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nonnull",
                "textEdit": {
                    "newText": "_Nonnull",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Null_unspecified",
                "insertText": "_Null_unspecified",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Null_unspecified",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Null_unspecified",
                "textEdit": {
                    "newText": "_Null_unspecified",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Nullable",
                "insertText": "_Nullable",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nullable",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nullable",
                "textEdit": {
                    "newText": "_Nullable",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "alignas",
                "insertText": "alignas",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignas(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aalignas",
                "textEdit": {
                    "newText": "alignas",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "asm",
                "insertText": "asm",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " asm(string-literal)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aasm",
                "textEdit": {
                    "newText": "asm",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "auto",
                "insertText": "auto",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " auto",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aauto",
                "textEdit": {
                    "newText": "auto",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "bool",
                "insertText": "bool",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " bool",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7abool",
                "textEdit": {
                    "newText": "bool",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "char",
                "insertText": "char",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar",
                "textEdit": {
                    "newText": "char",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "char16_t",
                "insertText": "char16_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char16_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar16_t",
                "textEdit": {
                    "newText": "char16_t",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "char32_t",
                "insertText": "char32_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char32_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar32_t",
                "textEdit": {
                    "newText": "char32_t",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "class",
                "insertText": "class",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " class",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aclass",
                "textEdit": {
                    "newText": "class",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "const",
                "insertText": "const",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " const",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconst",
                "textEdit": {
                    "newText": "const",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "constexpr",
                "insertText": "constexpr",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " constexpr",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconstexpr",
                "textEdit": {
                    "newText": "constexpr",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "decltype",
                "insertText": "decltype",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " decltype(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adecltype",
                "textEdit": {
                    "newText": "decltype",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "double",
                "insertText": "double",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " double",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adouble",
                "textEdit": {
                    "newText": "double",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "enum",
                "insertText": "enum",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " enum",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aenum",
                "textEdit": {
                    "newText": "enum",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "extern",
                "insertText": "extern",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " extern",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aextern",
                "textEdit": {
                    "newText": "extern",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "float",
                "insertText": "float",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " float",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7afloat",
                "textEdit": {
                    "newText": "float",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "inline",
                "insertText": "inline",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " inline",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ainline",
                "textEdit": {
                    "newText": "inline",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "int",
                "insertText": "int",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " int",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aint",
                "textEdit": {
                    "newText": "int",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "long",
                "insertText": "long",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " long",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7along",
                "textEdit": {
                    "newText": "long",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "namespace",
                "insertText": "namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " namespace name = namespace;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7anamespace",
                "textEdit": {
                    "newText": "namespace",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "operator",
                "insertText": "operator",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " operator",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aoperator",
                "textEdit": {
                    "newText": "operator",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "short",
                "insertText": "short",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " short",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ashort",
                "textEdit": {
                    "newText": "short",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "signed",
                "insertText": "signed",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " signed",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7asigned",
                "textEdit": {
                    "newText": "signed",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "static",
                "insertText": "static",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " static",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic",
                "textEdit": {
                    "newText": "static",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "struct",
                "insertText": "struct",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " struct",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astruct",
                "textEdit": {
                    "newText": "struct",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "thread_local",
                "insertText": "thread_local",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " thread_local",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7athread_local",
                "textEdit": {
                    "newText": "thread_local",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "typedef",
                "insertText": "typedef",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typedef type name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypedef",
                "textEdit": {
                    "newText": "typedef",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "typename",
                "insertText": "typename",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typename name",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypename",
                "textEdit": {
                    "newText": "typename",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "union",
                "insertText": "union",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " union",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunion",
                "textEdit": {
                    "newText": "union",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "unsigned",
                "insertText": "unsigned",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " unsigned",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunsigned",
                "textEdit": {
                    "newText": "unsigned",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using name = type;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using qualifier::name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "using namespace",
                "insertText": "using namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using namespace identifier;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing namespace",
                "textEdit": {
                    "newText": "using namespace",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "void",
                "insertText": "void",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " void",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avoid",
                "textEdit": {
                    "newText": "void",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "volatile",
                "insertText": "volatile",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " volatile",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avolatile",
                "textEdit": {
                    "newText": "volatile",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "wchar_t",
                "insertText": "wchar_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " wchar_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7awchar_t",
                "textEdit": {
                    "newText": "wchar_t",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "_Pragma",
                "insertText": "_Pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _Pragma",
                "score": 0.2504332661628723,
                "sortText": "417fc736_Pragma",
                "textEdit": {
                    "newText": "_Pragma",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__BASE_FILE__",
                "insertText": "__BASE_FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BASE_FILE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__BASE_FILE__",
                "textEdit": {
                    "newText": "__BASE_FILE__",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__COUNTER__",
                "insertText": "__COUNTER__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __COUNTER__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__COUNTER__",
                "textEdit": {
                    "newText": "__COUNTER__",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__DATE__",
                "insertText": "__DATE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DATE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DATE__",
                "textEdit": {
                    "newText": "__DATE__",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__FILE_NAME__",
                "insertText": "__FILE_NAME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE_NAME__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FILE_NAME__",
                "textEdit": {
                    "newText": "__FILE_NAME__",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__FILE__",
                "insertText": "__FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FILE__",
                "textEdit": {
                    "newText": "__FILE__",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__FLT_EVAL_METHOD__",
                "insertText": "__FLT_EVAL_METHOD__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FLT_EVAL_METHOD__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FLT_EVAL_METHOD__",
                "textEdit": {
                    "newText": "__FLT_EVAL_METHOD__",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__INCLUDE_LEVEL__",
                "insertText": "__INCLUDE_LEVEL__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __INCLUDE_LEVEL__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__INCLUDE_LEVEL__",
                "textEdit": {
                    "newText": "__INCLUDE_LEVEL__",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__LINE__",
                "insertText": "__LINE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __LINE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__LINE__",
                "textEdit": {
                    "newText": "__LINE__",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__TIMESTAMP__",
                "insertText": "__TIMESTAMP__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIMESTAMP__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__TIMESTAMP__",
                "textEdit": {
                    "newText": "__TIMESTAMP__",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__TIME__",
                "insertText": "__TIME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIME__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__TIME__",
                "textEdit": {
                    "newText": "__TIME__",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__building_module",
                "insertText": "__building_module",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __building_module",
                "score": 0.2504332661628723,
                "sortText": "417fc736__building_module",
                "textEdit": {
                    "newText": "__building_module",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_attribute",
                "insertText": "__has_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_attribute",
                "textEdit": {
                    "newText": "__has_attribute",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_builtin",
                "insertText": "__has_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_builtin",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_builtin",
                "textEdit": {
                    "newText": "__has_builtin",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_constexpr_builtin",
                "insertText": "__has_constexpr_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_constexpr_builtin",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_constexpr_builtin",
                "textEdit": {
                    "newText": "__has_constexpr_builtin",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_cpp_attribute",
                "insertText": "__has_cpp_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_cpp_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_cpp_attribute",
                "textEdit": {
                    "newText": "__has_cpp_attribute",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_declspec_attribute",
                "insertText": "__has_declspec_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_declspec_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_declspec_attribute",
                "textEdit": {
                    "newText": "__has_declspec_attribute",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_embed",
                "insertText": "__has_embed",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_embed",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_embed",
                "textEdit": {
                    "newText": "__has_embed",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_extension",
                "insertText": "__has_extension",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_extension",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_extension",
                "textEdit": {
                    "newText": "__has_extension",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_feature",
                "insertText": "__has_feature",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_feature",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_feature",
                "textEdit": {
                    "newText": "__has_feature",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_include",
                "insertText": "__has_include",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_include",
                "textEdit": {
                    "newText": "__has_include",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_include_next",
                "insertText": "__has_include_next",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include_next",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_include_next",
                "textEdit": {
                    "newText": "__has_include_next",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__has_warning",
                "insertText": "__has_warning",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_warning",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_warning",
                "textEdit": {
                    "newText": "__has_warning",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__identifier",
                "insertText": "__identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __identifier",
                "score": 0.2504332661628723,
                "sortText": "417fc736__identifier",
                "textEdit": {
                    "newText": "__identifier",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_identifier",
                "insertText": "__is_identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_identifier",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_identifier",
                "textEdit": {
                    "newText": "__is_identifier",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_arch",
                "insertText": "__is_target_arch",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_arch",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_arch",
                "textEdit": {
                    "newText": "__is_target_arch",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_environment",
                "insertText": "__is_target_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_environment",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_environment",
                "textEdit": {
                    "newText": "__is_target_environment",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_os",
                "insertText": "__is_target_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_os",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_os",
                "textEdit": {
                    "newText": "__is_target_os",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_environment",
                "insertText": "__is_target_variant_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_environment",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_variant_environment",
                "textEdit": {
                    "newText": "__is_target_variant_environment",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_os",
                "insertText": "__is_target_variant_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_os",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_variant_os",
                "textEdit": {
                    "newText": "__is_target_variant_os",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_vendor",
                "insertText": "__is_target_vendor",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_vendor",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_vendor",
                "textEdit": {
                    "newText": "__is_target_vendor",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "__pragma",
                "insertText": "__pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __pragma",
                "score": 0.2504332661628723,
                "sortText": "417fc736__pragma",
                "textEdit": {
                    "newText": "__pragma",
                    "range": {
                        "end": {
                            "character": 10,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['size_t', 'type_info', '_Nonnull', '_Null_unspecified', '_Nullable', 'alignas', 'asm', 'auto', 'bool', 'char', 'char16_t', 'char32_t', 'class', 'const', 'constexpr', 'decltype', 'double', 'enum', 'extern', 'float', 'inline', 'int', 'long', 'namespace', 'operator', 'short', 'signed', 'static', 'static_assert', 'struct', 'template', 'template', 'thread_local', 'typedef', 'typename', 'union', 'unsigned', 'using', 'using', 'using namespace', 'void', 'volatile', 'wchar_t', '_Pragma', '__BASE_FILE__', '__COUNTER__', '__DATE__', '__FILE_NAME__', '__FILE__', '__FLT_EVAL_METHOD__', '__INCLUDE_LEVEL__', '__LINE__', '__TIMESTAMP__', '__TIME__', '__building_module', '__has_attribute', '__has_builtin', '__has_constexpr_builtin', '__has_cpp_attribute', '__has_declspec_attribute', '__has_embed', '__has_extension', '__has_feature', '__has_include', '__has_include_next', '__has_warning', '__identifier', '__is_identifier', '__is_target_arch', '__is_target_environment', '__is_target_os', '__is_target_variant_environment', '__is_target_variant_os', '__is_target_vendor', '__pragma']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "char",
                "insertText": "char",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar",
                "textEdit": {
                    "newText": "char",
                    "range": {
                        "end": {
                            "character": 11,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "char16_t",
                "insertText": "char16_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char16_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar16_t",
                "textEdit": {
                    "newText": "char16_t",
                    "range": {
                        "end": {
                            "character": 11,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "char32_t",
                "insertText": "char32_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char32_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar32_t",
                "textEdit": {
                    "newText": "char32_t",
                    "range": {
                        "end": {
                            "character": 11,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "class",
                "insertText": "class",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " class",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aclass",
                "textEdit": {
                    "newText": "class",
                    "range": {
                        "end": {
                            "character": 11,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "const",
                "insertText": "const",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " const",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconst",
                "textEdit": {
                    "newText": "const",
                    "range": {
                        "end": {
                            "character": 11,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            },
            {
                "filterText": "constexpr",
                "insertText": "constexpr",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " constexpr",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconstexpr",
                "textEdit": {
                    "newText": "constexpr",
                    "range": {
                        "end": {
                            "character": 11,
                            "line": 0
                        },
                        "start": {
                            "character": 10,
                            "line": 0
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['char', 'char16_t', 'char32_t', 'class', 'const', 'constexpr']
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 13,
                        "line": 0
                    },
                    "start": {
                        "character": 13,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 16
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [0, [13, 13]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "size_t",
                "insertText": "size_t",
                "insertTextFormat": 1,
                "kind": 8,
                "label": " size_t",
                "score": 1.5456733703613281,
                "sortText": "403a2760size_t",
                "textEdit": {
                    "newText": "size_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "type_info",
                "insertText": "type_info",
                "insertTextFormat": 1,
                "kind": 7,
                "label": " type_info",
                "score": 1.0411033630371094,
                "sortText": "407abd20type_info",
                "textEdit": {
                    "newText": "type_info",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "_Nonnull",
                "insertText": "_Nonnull",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nonnull",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nonnull",
                "textEdit": {
                    "newText": "_Nonnull",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "_Null_unspecified",
                "insertText": "_Null_unspecified",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Null_unspecified",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Null_unspecified",
                "textEdit": {
                    "newText": "_Null_unspecified",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "_Nullable",
                "insertText": "_Nullable",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nullable",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nullable",
                "textEdit": {
                    "newText": "_Nullable",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "alignas",
                "insertText": "alignas",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignas(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aalignas",
                "textEdit": {
                    "newText": "alignas",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "asm",
                "insertText": "asm",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " asm(string-literal)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aasm",
                "textEdit": {
                    "newText": "asm",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "auto",
                "insertText": "auto",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " auto",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aauto",
                "textEdit": {
                    "newText": "auto",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "bool",
                "insertText": "bool",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " bool",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7abool",
                "textEdit": {
                    "newText": "bool",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "char",
                "insertText": "char",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar",
                "textEdit": {
                    "newText": "char",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "char16_t",
                "insertText": "char16_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char16_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar16_t",
                "textEdit": {
                    "newText": "char16_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "char32_t",
                "insertText": "char32_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char32_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar32_t",
                "textEdit": {
                    "newText": "char32_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "class",
                "insertText": "class",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " class",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aclass",
                "textEdit": {
                    "newText": "class",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "const",
                "insertText": "const",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " const",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconst",
                "textEdit": {
                    "newText": "const",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "constexpr",
                "insertText": "constexpr",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " constexpr",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconstexpr",
                "textEdit": {
                    "newText": "constexpr",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "decltype",
                "insertText": "decltype",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " decltype(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adecltype",
                "textEdit": {
                    "newText": "decltype",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "double",
                "insertText": "double",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " double",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adouble",
                "textEdit": {
                    "newText": "double",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "enum",
                "insertText": "enum",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " enum",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aenum",
                "textEdit": {
                    "newText": "enum",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "extern",
                "insertText": "extern",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " extern",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aextern",
                "textEdit": {
                    "newText": "extern",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "float",
                "insertText": "float",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " float",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7afloat",
                "textEdit": {
                    "newText": "float",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "inline",
                "insertText": "inline",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " inline",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ainline",
                "textEdit": {
                    "newText": "inline",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "int",
                "insertText": "int",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " int",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aint",
                "textEdit": {
                    "newText": "int",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "long",
                "insertText": "long",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " long",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7along",
                "textEdit": {
                    "newText": "long",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "namespace",
                "insertText": "namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " namespace name = namespace;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7anamespace",
                "textEdit": {
                    "newText": "namespace",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "operator",
                "insertText": "operator",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " operator",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aoperator",
                "textEdit": {
                    "newText": "operator",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "short",
                "insertText": "short",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " short",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ashort",
                "textEdit": {
                    "newText": "short",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "signed",
                "insertText": "signed",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " signed",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7asigned",
                "textEdit": {
                    "newText": "signed",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "static",
                "insertText": "static",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " static",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic",
                "textEdit": {
                    "newText": "static",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "struct",
                "insertText": "struct",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " struct",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astruct",
                "textEdit": {
                    "newText": "struct",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "thread_local",
                "insertText": "thread_local",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " thread_local",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7athread_local",
                "textEdit": {
                    "newText": "thread_local",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "typedef",
                "insertText": "typedef",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typedef type name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypedef",
                "textEdit": {
                    "newText": "typedef",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "typename",
                "insertText": "typename",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typename name",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypename",
                "textEdit": {
                    "newText": "typename",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "union",
                "insertText": "union",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " union",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunion",
                "textEdit": {
                    "newText": "union",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "unsigned",
                "insertText": "unsigned",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " unsigned",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunsigned",
                "textEdit": {
                    "newText": "unsigned",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using name = type;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using qualifier::name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "using namespace",
                "insertText": "using namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using namespace identifier;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing namespace",
                "textEdit": {
                    "newText": "using namespace",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "void",
                "insertText": "void",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " void",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avoid",
                "textEdit": {
                    "newText": "void",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "volatile",
                "insertText": "volatile",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " volatile",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avolatile",
                "textEdit": {
                    "newText": "volatile",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "wchar_t",
                "insertText": "wchar_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " wchar_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7awchar_t",
                "textEdit": {
                    "newText": "wchar_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "_Pragma",
                "insertText": "_Pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _Pragma",
                "score": 0.2504332661628723,
                "sortText": "417fc736_Pragma",
                "textEdit": {
                    "newText": "_Pragma",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__BASE_FILE__",
                "insertText": "__BASE_FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BASE_FILE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__BASE_FILE__",
                "textEdit": {
                    "newText": "__BASE_FILE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__COUNTER__",
                "insertText": "__COUNTER__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __COUNTER__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__COUNTER__",
                "textEdit": {
                    "newText": "__COUNTER__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__DATE__",
                "insertText": "__DATE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DATE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DATE__",
                "textEdit": {
                    "newText": "__DATE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__FILE_NAME__",
                "insertText": "__FILE_NAME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE_NAME__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FILE_NAME__",
                "textEdit": {
                    "newText": "__FILE_NAME__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__FILE__",
                "insertText": "__FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FILE__",
                "textEdit": {
                    "newText": "__FILE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__FLT_EVAL_METHOD__",
                "insertText": "__FLT_EVAL_METHOD__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FLT_EVAL_METHOD__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FLT_EVAL_METHOD__",
                "textEdit": {
                    "newText": "__FLT_EVAL_METHOD__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__INCLUDE_LEVEL__",
                "insertText": "__INCLUDE_LEVEL__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __INCLUDE_LEVEL__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__INCLUDE_LEVEL__",
                "textEdit": {
                    "newText": "__INCLUDE_LEVEL__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__LINE__",
                "insertText": "__LINE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __LINE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__LINE__",
                "textEdit": {
                    "newText": "__LINE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__TIMESTAMP__",
                "insertText": "__TIMESTAMP__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIMESTAMP__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__TIMESTAMP__",
                "textEdit": {
                    "newText": "__TIMESTAMP__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__TIME__",
                "insertText": "__TIME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIME__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__TIME__",
                "textEdit": {
                    "newText": "__TIME__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__building_module",
                "insertText": "__building_module",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __building_module",
                "score": 0.2504332661628723,
                "sortText": "417fc736__building_module",
                "textEdit": {
                    "newText": "__building_module",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__has_attribute",
                "insertText": "__has_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_attribute",
                "textEdit": {
                    "newText": "__has_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__has_builtin",
                "insertText": "__has_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_builtin",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_builtin",
                "textEdit": {
                    "newText": "__has_builtin",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__has_constexpr_builtin",
                "insertText": "__has_constexpr_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_constexpr_builtin",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_constexpr_builtin",
                "textEdit": {
                    "newText": "__has_constexpr_builtin",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__has_cpp_attribute",
                "insertText": "__has_cpp_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_cpp_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_cpp_attribute",
                "textEdit": {
                    "newText": "__has_cpp_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__has_declspec_attribute",
                "insertText": "__has_declspec_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_declspec_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_declspec_attribute",
                "textEdit": {
                    "newText": "__has_declspec_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__has_embed",
                "insertText": "__has_embed",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_embed",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_embed",
                "textEdit": {
                    "newText": "__has_embed",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__has_extension",
                "insertText": "__has_extension",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_extension",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_extension",
                "textEdit": {
                    "newText": "__has_extension",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__has_feature",
                "insertText": "__has_feature",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_feature",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_feature",
                "textEdit": {
                    "newText": "__has_feature",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__has_include",
                "insertText": "__has_include",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_include",
                "textEdit": {
                    "newText": "__has_include",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__has_include_next",
                "insertText": "__has_include_next",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include_next",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_include_next",
                "textEdit": {
                    "newText": "__has_include_next",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__has_warning",
                "insertText": "__has_warning",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_warning",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_warning",
                "textEdit": {
                    "newText": "__has_warning",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__identifier",
                "insertText": "__identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __identifier",
                "score": 0.2504332661628723,
                "sortText": "417fc736__identifier",
                "textEdit": {
                    "newText": "__identifier",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__is_identifier",
                "insertText": "__is_identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_identifier",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_identifier",
                "textEdit": {
                    "newText": "__is_identifier",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_arch",
                "insertText": "__is_target_arch",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_arch",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_arch",
                "textEdit": {
                    "newText": "__is_target_arch",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_environment",
                "insertText": "__is_target_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_environment",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_environment",
                "textEdit": {
                    "newText": "__is_target_environment",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_os",
                "insertText": "__is_target_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_os",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_os",
                "textEdit": {
                    "newText": "__is_target_os",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_environment",
                "insertText": "__is_target_variant_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_environment",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_variant_environment",
                "textEdit": {
                    "newText": "__is_target_variant_environment",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_os",
                "insertText": "__is_target_variant_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_os",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_variant_os",
                "textEdit": {
                    "newText": "__is_target_variant_os",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_vendor",
                "insertText": "__is_target_vendor",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_vendor",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_vendor",
                "textEdit": {
                    "newText": "__is_target_vendor",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            },
            {
                "filterText": "__pragma",
                "insertText": "__pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __pragma",
                "score": 0.2504332661628723,
                "sortText": "417fc736__pragma",
                "textEdit": {
                    "newText": "__pragma",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 1
                        },
                        "start": {
                            "character": 0,
                            "line": 1
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['size_t', 'type_info', '_Nonnull', '_Null_unspecified', '_Nullable', 'alignas', 'asm', 'auto', 'bool', 'char', 'char16_t', 'char32_t', 'class', 'const', 'constexpr', 'decltype', 'double', 'enum', 'extern', 'float', 'inline', 'int', 'long', 'namespace', 'operator', 'short', 'signed', 'static', 'static_assert', 'struct', 'template', 'template', 'thread_local', 'typedef', 'typename', 'union', 'unsigned', 'using', 'using', 'using namespace', 'void', 'volatile', 'wchar_t', '_Pragma', '__BASE_FILE__', '__COUNTER__', '__DATE__', '__FILE_NAME__', '__FILE__', '__FLT_EVAL_METHOD__', '__INCLUDE_LEVEL__', '__LINE__', '__TIMESTAMP__', '__TIME__', '__building_module', '__has_attribute', '__has_builtin', '__has_constexpr_builtin', '__has_cpp_attribute', '__has_declspec_attribute', '__has_embed', '__has_extension', '__has_feature', '__has_include', '__has_include_next', '__has_warning', '__identifier', '__is_identifier', '__is_target_arch', '__is_target_environment', '__is_target_os', '__is_target_variant_environment', '__is_target_variant_os', '__is_target_vendor', '__pragma']
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 0,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 18
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 0]]]
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 19
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "size_t",
                "insertText": "size_t",
                "insertTextFormat": 1,
                "kind": 8,
                "label": " size_t",
                "score": 1.5456733703613281,
                "sortText": "403a2760size_t",
                "textEdit": {
                    "newText": "size_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "type_info",
                "insertText": "type_info",
                "insertTextFormat": 1,
                "kind": 7,
                "label": " type_info",
                "score": 1.0411033630371094,
                "sortText": "407abd20type_info",
                "textEdit": {
                    "newText": "type_info",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "_Nonnull",
                "insertText": "_Nonnull",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nonnull",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nonnull",
                "textEdit": {
                    "newText": "_Nonnull",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "_Null_unspecified",
                "insertText": "_Null_unspecified",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Null_unspecified",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Null_unspecified",
                "textEdit": {
                    "newText": "_Null_unspecified",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "_Nullable",
                "insertText": "_Nullable",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nullable",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nullable",
                "textEdit": {
                    "newText": "_Nullable",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "alignas",
                "insertText": "alignas",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignas(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aalignas",
                "textEdit": {
                    "newText": "alignas",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "asm",
                "insertText": "asm",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " asm(string-literal)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aasm",
                "textEdit": {
                    "newText": "asm",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "auto",
                "insertText": "auto",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " auto",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aauto",
                "textEdit": {
                    "newText": "auto",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "bool",
                "insertText": "bool",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " bool",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7abool",
                "textEdit": {
                    "newText": "bool",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "char",
                "insertText": "char",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar",
                "textEdit": {
                    "newText": "char",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "char16_t",
                "insertText": "char16_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char16_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar16_t",
                "textEdit": {
                    "newText": "char16_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "char32_t",
                "insertText": "char32_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char32_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar32_t",
                "textEdit": {
                    "newText": "char32_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "class",
                "insertText": "class",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " class",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aclass",
                "textEdit": {
                    "newText": "class",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "const",
                "insertText": "const",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " const",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconst",
                "textEdit": {
                    "newText": "const",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "constexpr",
                "insertText": "constexpr",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " constexpr",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconstexpr",
                "textEdit": {
                    "newText": "constexpr",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "decltype",
                "insertText": "decltype",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " decltype(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adecltype",
                "textEdit": {
                    "newText": "decltype",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "double",
                "insertText": "double",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " double",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adouble",
                "textEdit": {
                    "newText": "double",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "enum",
                "insertText": "enum",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " enum",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aenum",
                "textEdit": {
                    "newText": "enum",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "extern",
                "insertText": "extern",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " extern",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aextern",
                "textEdit": {
                    "newText": "extern",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "float",
                "insertText": "float",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " float",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7afloat",
                "textEdit": {
                    "newText": "float",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "inline",
                "insertText": "inline",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " inline",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ainline",
                "textEdit": {
                    "newText": "inline",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "int",
                "insertText": "int",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " int",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aint",
                "textEdit": {
                    "newText": "int",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "long",
                "insertText": "long",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " long",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7along",
                "textEdit": {
                    "newText": "long",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "namespace",
                "insertText": "namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " namespace name = namespace;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7anamespace",
                "textEdit": {
                    "newText": "namespace",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "operator",
                "insertText": "operator",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " operator",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aoperator",
                "textEdit": {
                    "newText": "operator",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "short",
                "insertText": "short",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " short",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ashort",
                "textEdit": {
                    "newText": "short",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "signed",
                "insertText": "signed",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " signed",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7asigned",
                "textEdit": {
                    "newText": "signed",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "static",
                "insertText": "static",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " static",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic",
                "textEdit": {
                    "newText": "static",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "struct",
                "insertText": "struct",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " struct",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astruct",
                "textEdit": {
                    "newText": "struct",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "thread_local",
                "insertText": "thread_local",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " thread_local",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7athread_local",
                "textEdit": {
                    "newText": "thread_local",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "typedef",
                "insertText": "typedef",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typedef type name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypedef",
                "textEdit": {
                    "newText": "typedef",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "typename",
                "insertText": "typename",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typename name",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypename",
                "textEdit": {
                    "newText": "typename",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "union",
                "insertText": "union",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " union",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunion",
                "textEdit": {
                    "newText": "union",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "unsigned",
                "insertText": "unsigned",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " unsigned",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunsigned",
                "textEdit": {
                    "newText": "unsigned",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using name = type;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using qualifier::name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "using namespace",
                "insertText": "using namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using namespace identifier;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing namespace",
                "textEdit": {
                    "newText": "using namespace",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "void",
                "insertText": "void",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " void",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avoid",
                "textEdit": {
                    "newText": "void",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "volatile",
                "insertText": "volatile",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " volatile",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avolatile",
                "textEdit": {
                    "newText": "volatile",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "wchar_t",
                "insertText": "wchar_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " wchar_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7awchar_t",
                "textEdit": {
                    "newText": "wchar_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "_Pragma",
                "insertText": "_Pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _Pragma",
                "score": 0.2504332661628723,
                "sortText": "417fc736_Pragma",
                "textEdit": {
                    "newText": "_Pragma",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__BASE_FILE__",
                "insertText": "__BASE_FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BASE_FILE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__BASE_FILE__",
                "textEdit": {
                    "newText": "__BASE_FILE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__COUNTER__",
                "insertText": "__COUNTER__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __COUNTER__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__COUNTER__",
                "textEdit": {
                    "newText": "__COUNTER__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__DATE__",
                "insertText": "__DATE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DATE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DATE__",
                "textEdit": {
                    "newText": "__DATE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__FILE_NAME__",
                "insertText": "__FILE_NAME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE_NAME__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FILE_NAME__",
                "textEdit": {
                    "newText": "__FILE_NAME__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__FILE__",
                "insertText": "__FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FILE__",
                "textEdit": {
                    "newText": "__FILE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__FLT_EVAL_METHOD__",
                "insertText": "__FLT_EVAL_METHOD__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FLT_EVAL_METHOD__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FLT_EVAL_METHOD__",
                "textEdit": {
                    "newText": "__FLT_EVAL_METHOD__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__INCLUDE_LEVEL__",
                "insertText": "__INCLUDE_LEVEL__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __INCLUDE_LEVEL__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__INCLUDE_LEVEL__",
                "textEdit": {
                    "newText": "__INCLUDE_LEVEL__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__LINE__",
                "insertText": "__LINE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __LINE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__LINE__",
                "textEdit": {
                    "newText": "__LINE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__TIMESTAMP__",
                "insertText": "__TIMESTAMP__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIMESTAMP__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__TIMESTAMP__",
                "textEdit": {
                    "newText": "__TIMESTAMP__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__TIME__",
                "insertText": "__TIME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIME__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__TIME__",
                "textEdit": {
                    "newText": "__TIME__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__building_module",
                "insertText": "__building_module",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __building_module",
                "score": 0.2504332661628723,
                "sortText": "417fc736__building_module",
                "textEdit": {
                    "newText": "__building_module",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__has_attribute",
                "insertText": "__has_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_attribute",
                "textEdit": {
                    "newText": "__has_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__has_builtin",
                "insertText": "__has_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_builtin",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_builtin",
                "textEdit": {
                    "newText": "__has_builtin",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__has_constexpr_builtin",
                "insertText": "__has_constexpr_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_constexpr_builtin",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_constexpr_builtin",
                "textEdit": {
                    "newText": "__has_constexpr_builtin",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__has_cpp_attribute",
                "insertText": "__has_cpp_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_cpp_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_cpp_attribute",
                "textEdit": {
                    "newText": "__has_cpp_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__has_declspec_attribute",
                "insertText": "__has_declspec_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_declspec_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_declspec_attribute",
                "textEdit": {
                    "newText": "__has_declspec_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__has_embed",
                "insertText": "__has_embed",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_embed",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_embed",
                "textEdit": {
                    "newText": "__has_embed",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__has_extension",
                "insertText": "__has_extension",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_extension",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_extension",
                "textEdit": {
                    "newText": "__has_extension",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__has_feature",
                "insertText": "__has_feature",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_feature",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_feature",
                "textEdit": {
                    "newText": "__has_feature",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__has_include",
                "insertText": "__has_include",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_include",
                "textEdit": {
                    "newText": "__has_include",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__has_include_next",
                "insertText": "__has_include_next",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include_next",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_include_next",
                "textEdit": {
                    "newText": "__has_include_next",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__has_warning",
                "insertText": "__has_warning",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_warning",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_warning",
                "textEdit": {
                    "newText": "__has_warning",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__identifier",
                "insertText": "__identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __identifier",
                "score": 0.2504332661628723,
                "sortText": "417fc736__identifier",
                "textEdit": {
                    "newText": "__identifier",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__is_identifier",
                "insertText": "__is_identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_identifier",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_identifier",
                "textEdit": {
                    "newText": "__is_identifier",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_arch",
                "insertText": "__is_target_arch",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_arch",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_arch",
                "textEdit": {
                    "newText": "__is_target_arch",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_environment",
                "insertText": "__is_target_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_environment",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_environment",
                "textEdit": {
                    "newText": "__is_target_environment",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_os",
                "insertText": "__is_target_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_os",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_os",
                "textEdit": {
                    "newText": "__is_target_os",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_environment",
                "insertText": "__is_target_variant_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_environment",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_variant_environment",
                "textEdit": {
                    "newText": "__is_target_variant_environment",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_os",
                "insertText": "__is_target_variant_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_os",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_variant_os",
                "textEdit": {
                    "newText": "__is_target_variant_os",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_vendor",
                "insertText": "__is_target_vendor",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_vendor",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_vendor",
                "textEdit": {
                    "newText": "__is_target_vendor",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "__pragma",
                "insertText": "__pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __pragma",
                "score": 0.2504332661628723,
                "sortText": "417fc736__pragma",
                "textEdit": {
                    "newText": "__pragma",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['size_t', 'type_info', '_Nonnull', '_Null_unspecified', '_Nullable', 'alignas', 'asm', 'auto', 'bool', 'char', 'char16_t', 'char32_t', 'class', 'const', 'constexpr', 'decltype', 'double', 'enum', 'extern', 'float', 'inline', 'int', 'long', 'namespace', 'operator', 'short', 'signed', 'static', 'static_assert', 'struct', 'template', 'template', 'thread_local', 'typedef', 'typename', 'union', 'unsigned', 'using', 'using', 'using namespace', 'void', 'volatile', 'wchar_t', '_Pragma', '__BASE_FILE__', '__COUNTER__', '__DATE__', '__FILE_NAME__', '__FILE__', '__FLT_EVAL_METHOD__', '__INCLUDE_LEVEL__', '__LINE__', '__TIMESTAMP__', '__TIME__', '__building_module', '__has_attribute', '__has_builtin', '__has_constexpr_builtin', '__has_cpp_attribute', '__has_declspec_attribute', '__has_embed', '__has_extension', '__has_feature', '__has_include', '__has_include_next', '__has_warning', '__identifier', '__is_identifier', '__is_target_arch', '__is_target_environment', '__is_target_os', '__is_target_variant_environment', '__is_target_variant_os', '__is_target_vendor', '__pragma']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 21
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "void",
                "insertText": "void",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " void",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avoid",
                "textEdit": {
                    "newText": "void",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            },
            {
                "filterText": "volatile",
                "insertText": "volatile",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " volatile",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avolatile",
                "textEdit": {
                    "newText": "volatile",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 2
                        },
                        "start": {
                            "character": 0,
                            "line": 2
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['void', 'volatile']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 22
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 23
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 24
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 26
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "size_t",
                "insertText": "size_t",
                "insertTextFormat": 1,
                "kind": 8,
                "label": " size_t",
                "score": 1.5456733703613281,
                "sortText": "403a2760size_t",
                "textEdit": {
                    "newText": "size_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "type_info",
                "insertText": "type_info",
                "insertTextFormat": 1,
                "kind": 7,
                "label": " type_info",
                "score": 1.0411033630371094,
                "sortText": "407abd20type_info",
                "textEdit": {
                    "newText": "type_info",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "_Nonnull",
                "insertText": "_Nonnull",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nonnull",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nonnull",
                "textEdit": {
                    "newText": "_Nonnull",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "_Null_unspecified",
                "insertText": "_Null_unspecified",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Null_unspecified",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Null_unspecified",
                "textEdit": {
                    "newText": "_Null_unspecified",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "_Nullable",
                "insertText": "_Nullable",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nullable",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7a_Nullable",
                "textEdit": {
                    "newText": "_Nullable",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "alignas",
                "insertText": "alignas",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignas(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aalignas",
                "textEdit": {
                    "newText": "alignas",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "asm",
                "insertText": "asm",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " asm(string-literal)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aasm",
                "textEdit": {
                    "newText": "asm",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "auto",
                "insertText": "auto",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " auto",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aauto",
                "textEdit": {
                    "newText": "auto",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "bool",
                "insertText": "bool",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " bool",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7abool",
                "textEdit": {
                    "newText": "bool",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "char",
                "insertText": "char",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar",
                "textEdit": {
                    "newText": "char",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "char16_t",
                "insertText": "char16_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char16_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar16_t",
                "textEdit": {
                    "newText": "char16_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "char32_t",
                "insertText": "char32_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char32_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7achar32_t",
                "textEdit": {
                    "newText": "char32_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "class",
                "insertText": "class",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " class",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aclass",
                "textEdit": {
                    "newText": "class",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "const",
                "insertText": "const",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " const",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconst",
                "textEdit": {
                    "newText": "const",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "constexpr",
                "insertText": "constexpr",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " constexpr",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aconstexpr",
                "textEdit": {
                    "newText": "constexpr",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "decltype",
                "insertText": "decltype",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " decltype(expression)",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adecltype",
                "textEdit": {
                    "newText": "decltype",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "double",
                "insertText": "double",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " double",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7adouble",
                "textEdit": {
                    "newText": "double",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "enum",
                "insertText": "enum",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " enum",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aenum",
                "textEdit": {
                    "newText": "enum",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "extern",
                "insertText": "extern",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " extern",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aextern",
                "textEdit": {
                    "newText": "extern",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "float",
                "insertText": "float",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " float",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7afloat",
                "textEdit": {
                    "newText": "float",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "inline",
                "insertText": "inline",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " inline",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ainline",
                "textEdit": {
                    "newText": "inline",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "int",
                "insertText": "int",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " int",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aint",
                "textEdit": {
                    "newText": "int",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "long",
                "insertText": "long",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " long",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7along",
                "textEdit": {
                    "newText": "long",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "namespace",
                "insertText": "namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " namespace name = namespace;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7anamespace",
                "textEdit": {
                    "newText": "namespace",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "operator",
                "insertText": "operator",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " operator",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aoperator",
                "textEdit": {
                    "newText": "operator",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "short",
                "insertText": "short",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " short",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ashort",
                "textEdit": {
                    "newText": "short",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "signed",
                "insertText": "signed",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " signed",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7asigned",
                "textEdit": {
                    "newText": "signed",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "static",
                "insertText": "static",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " static",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic",
                "textEdit": {
                    "newText": "static",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astatic_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "struct",
                "insertText": "struct",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " struct",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7astruct",
                "textEdit": {
                    "newText": "struct",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "template",
                "insertText": "template",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " template",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atemplate",
                "textEdit": {
                    "newText": "template",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "thread_local",
                "insertText": "thread_local",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " thread_local",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7athread_local",
                "textEdit": {
                    "newText": "thread_local",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "typedef",
                "insertText": "typedef",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typedef type name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypedef",
                "textEdit": {
                    "newText": "typedef",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "typename",
                "insertText": "typename",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typename name",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7atypename",
                "textEdit": {
                    "newText": "typename",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "union",
                "insertText": "union",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " union",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunion",
                "textEdit": {
                    "newText": "union",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "unsigned",
                "insertText": "unsigned",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " unsigned",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7aunsigned",
                "textEdit": {
                    "newText": "unsigned",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using name = type;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using qualifier::name;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "using namespace",
                "insertText": "using namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using namespace identifier;",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7ausing namespace",
                "textEdit": {
                    "newText": "using namespace",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "void",
                "insertText": "void",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " void",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avoid",
                "textEdit": {
                    "newText": "void",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "volatile",
                "insertText": "volatile",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " volatile",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7avolatile",
                "textEdit": {
                    "newText": "volatile",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "wchar_t",
                "insertText": "wchar_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " wchar_t",
                "score": 0.7722705602645874,
                "sortText": "40ba4c7awchar_t",
                "textEdit": {
                    "newText": "wchar_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "_Pragma",
                "insertText": "_Pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _Pragma",
                "score": 0.2504332661628723,
                "sortText": "417fc736_Pragma",
                "textEdit": {
                    "newText": "_Pragma",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__BASE_FILE__",
                "insertText": "__BASE_FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BASE_FILE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__BASE_FILE__",
                "textEdit": {
                    "newText": "__BASE_FILE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__COUNTER__",
                "insertText": "__COUNTER__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __COUNTER__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__COUNTER__",
                "textEdit": {
                    "newText": "__COUNTER__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__DATE__",
                "insertText": "__DATE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DATE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__DATE__",
                "textEdit": {
                    "newText": "__DATE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__FILE_NAME__",
                "insertText": "__FILE_NAME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE_NAME__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FILE_NAME__",
                "textEdit": {
                    "newText": "__FILE_NAME__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__FILE__",
                "insertText": "__FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FILE__",
                "textEdit": {
                    "newText": "__FILE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__FLT_EVAL_METHOD__",
                "insertText": "__FLT_EVAL_METHOD__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FLT_EVAL_METHOD__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__FLT_EVAL_METHOD__",
                "textEdit": {
                    "newText": "__FLT_EVAL_METHOD__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__INCLUDE_LEVEL__",
                "insertText": "__INCLUDE_LEVEL__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __INCLUDE_LEVEL__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__INCLUDE_LEVEL__",
                "textEdit": {
                    "newText": "__INCLUDE_LEVEL__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__LINE__",
                "insertText": "__LINE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __LINE__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__LINE__",
                "textEdit": {
                    "newText": "__LINE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__TIMESTAMP__",
                "insertText": "__TIMESTAMP__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIMESTAMP__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__TIMESTAMP__",
                "textEdit": {
                    "newText": "__TIMESTAMP__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__TIME__",
                "insertText": "__TIME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIME__",
                "score": 0.2504332661628723,
                "sortText": "417fc736__TIME__",
                "textEdit": {
                    "newText": "__TIME__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__building_module",
                "insertText": "__building_module",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __building_module",
                "score": 0.2504332661628723,
                "sortText": "417fc736__building_module",
                "textEdit": {
                    "newText": "__building_module",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__has_attribute",
                "insertText": "__has_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_attribute",
                "textEdit": {
                    "newText": "__has_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__has_builtin",
                "insertText": "__has_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_builtin",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_builtin",
                "textEdit": {
                    "newText": "__has_builtin",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__has_constexpr_builtin",
                "insertText": "__has_constexpr_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_constexpr_builtin",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_constexpr_builtin",
                "textEdit": {
                    "newText": "__has_constexpr_builtin",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__has_cpp_attribute",
                "insertText": "__has_cpp_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_cpp_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_cpp_attribute",
                "textEdit": {
                    "newText": "__has_cpp_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__has_declspec_attribute",
                "insertText": "__has_declspec_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_declspec_attribute",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_declspec_attribute",
                "textEdit": {
                    "newText": "__has_declspec_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__has_embed",
                "insertText": "__has_embed",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_embed",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_embed",
                "textEdit": {
                    "newText": "__has_embed",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__has_extension",
                "insertText": "__has_extension",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_extension",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_extension",
                "textEdit": {
                    "newText": "__has_extension",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__has_feature",
                "insertText": "__has_feature",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_feature",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_feature",
                "textEdit": {
                    "newText": "__has_feature",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__has_include",
                "insertText": "__has_include",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_include",
                "textEdit": {
                    "newText": "__has_include",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__has_include_next",
                "insertText": "__has_include_next",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include_next",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_include_next",
                "textEdit": {
                    "newText": "__has_include_next",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__has_warning",
                "insertText": "__has_warning",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_warning",
                "score": 0.2504332661628723,
                "sortText": "417fc736__has_warning",
                "textEdit": {
                    "newText": "__has_warning",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__identifier",
                "insertText": "__identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __identifier",
                "score": 0.2504332661628723,
                "sortText": "417fc736__identifier",
                "textEdit": {
                    "newText": "__identifier",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__is_identifier",
                "insertText": "__is_identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_identifier",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_identifier",
                "textEdit": {
                    "newText": "__is_identifier",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_arch",
                "insertText": "__is_target_arch",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_arch",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_arch",
                "textEdit": {
                    "newText": "__is_target_arch",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_environment",
                "insertText": "__is_target_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_environment",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_environment",
                "textEdit": {
                    "newText": "__is_target_environment",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_os",
                "insertText": "__is_target_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_os",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_os",
                "textEdit": {
                    "newText": "__is_target_os",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_environment",
                "insertText": "__is_target_variant_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_environment",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_variant_environment",
                "textEdit": {
                    "newText": "__is_target_variant_environment",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_os",
                "insertText": "__is_target_variant_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_os",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_variant_os",
                "textEdit": {
                    "newText": "__is_target_variant_os",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_vendor",
                "insertText": "__is_target_vendor",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_vendor",
                "score": 0.2504332661628723,
                "sortText": "417fc736__is_target_vendor",
                "textEdit": {
                    "newText": "__is_target_vendor",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            },
            {
                "filterText": "__pragma",
                "insertText": "__pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __pragma",
                "score": 0.2504332661628723,
                "sortText": "417fc736__pragma",
                "textEdit": {
                    "newText": "__pragma",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 3
                        },
                        "start": {
                            "character": 0,
                            "line": 3
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['size_t', 'type_info', '_Nonnull', '_Null_unspecified', '_Nullable', 'alignas', 'asm', 'auto', 'bool', 'char', 'char16_t', 'char32_t', 'class', 'const', 'constexpr', 'decltype', 'double', 'enum', 'extern', 'float', 'inline', 'int', 'long', 'namespace', 'operator', 'short', 'signed', 'static', 'static_assert', 'struct', 'template', 'template', 'thread_local', 'typedef', 'typename', 'union', 'unsigned', 'using', 'using', 'using namespace', 'void', 'volatile', 'wchar_t', '_Pragma', '__BASE_FILE__', '__COUNTER__', '__DATE__', '__FILE_NAME__', '__FILE__', '__FLT_EVAL_METHOD__', '__INCLUDE_LEVEL__', '__LINE__', '__TIMESTAMP__', '__TIME__', '__building_module', '__has_attribute', '__has_builtin', '__has_constexpr_builtin', '__has_cpp_attribute', '__has_declspec_attribute', '__has_embed', '__has_extension', '__has_feature', '__has_include', '__has_include_next', '__has_warning', '__identifier', '__is_identifier', '__is_target_arch', '__is_target_environment', '__is_target_os', '__is_target_variant_environment', '__is_target_variant_os', '__is_target_vendor', '__pragma']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 29
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 30
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 34
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 36
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 37
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 38
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 39
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "missing_type_specifier",
                "message": "A type specifier is required for all declarations",
                "range": {
                    "end": {
                        "character": 4,
                        "line": 0
                    },
                    "start": {
                        "character": 0,
                        "line": 0
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "invalid_token_after_toplevel_declarator",
                "message": "Expected ';' after top level declarator (fix available)",
                "range": {
                    "end": {
                        "character": 2,
                        "line": 1
                    },
                    "start": {
                        "character": 0,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 42
    }
}
Diagnostics received from LSP.
Errors received: [[0, [0, 4]], [1, [0, 2]]]
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "alignas",
                "insertText": "alignas",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignas(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8alignas",
                "textEdit": {
                    "newText": "alignas",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "size_t",
                "filterText": "alignof",
                "insertText": "alignof",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignof(type)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8alignof",
                "textEdit": {
                    "newText": "alignof",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "auto",
                "insertText": "auto",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " auto",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8auto",
                "textEdit": {
                    "newText": "auto",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.8373723030090332,
                "sortText": "80000000static_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['alignas', 'alignof', 'auto', 'static_assert']
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "detail": "int",
                "filterText": "var1",
                "insertText": "var1",
                "insertTextFormat": 1,
                "kind": 6,
                "label": " var1",
                "score": 1.804139494895935,
                "sortText": "401911f5var1",
                "textEdit": {
                    "newText": "var1",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "int",
                "filterText": "var2",
                "insertText": "var2",
                "insertTextFormat": 1,
                "kind": 6,
                "label": " var2",
                "score": 1.804139494895935,
                "sortText": "401911f5var2",
                "textEdit": {
                    "newText": "var2",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "int",
                "filterText": "main",
                "insertText": "main",
                "insertTextFormat": 1,
                "kind": 3,
                "label": " main()",
                "score": 1.0087924003601074,
                "sortText": "407edfe4main",
                "textEdit": {
                    "newText": "main",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "size_t",
                "insertText": "size_t",
                "insertTextFormat": 1,
                "kind": 8,
                "label": " size_t",
                "score": 0.9800145626068115,
                "sortText": "40851dc4size_t",
                "textEdit": {
                    "newText": "size_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "_Nonnull",
                "insertText": "_Nonnull",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nonnull",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8_Nonnull",
                "textEdit": {
                    "newText": "_Nonnull",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "_Null_unspecified",
                "insertText": "_Null_unspecified",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Null_unspecified",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8_Null_unspecified",
                "textEdit": {
                    "newText": "_Null_unspecified",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "_Nullable",
                "insertText": "_Nullable",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nullable",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8_Nullable",
                "textEdit": {
                    "newText": "_Nullable",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__FUNCTION__",
                "insertText": "__FUNCTION__",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " __FUNCTION__",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8__FUNCTION__",
                "textEdit": {
                    "newText": "__FUNCTION__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__PRETTY_FUNCTION__",
                "insertText": "__PRETTY_FUNCTION__",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " __PRETTY_FUNCTION__",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8__PRETTY_FUNCTION__",
                "textEdit": {
                    "newText": "__PRETTY_FUNCTION__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__func__",
                "insertText": "__func__",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " __func__",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8__func__",
                "textEdit": {
                    "newText": "__func__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "alignas",
                "insertText": "alignas",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignas(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8alignas",
                "textEdit": {
                    "newText": "alignas",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "size_t",
                "filterText": "alignof",
                "insertText": "alignof",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignof(type)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8alignof",
                "textEdit": {
                    "newText": "alignof",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "auto",
                "insertText": "auto",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " auto",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8auto",
                "textEdit": {
                    "newText": "auto",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "bool",
                "insertText": "bool",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " bool",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8bool",
                "textEdit": {
                    "newText": "bool",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "char",
                "insertText": "char",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8char",
                "textEdit": {
                    "newText": "char",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "char16_t",
                "insertText": "char16_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char16_t",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8char16_t",
                "textEdit": {
                    "newText": "char16_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "char32_t",
                "insertText": "char32_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char32_t",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8char32_t",
                "textEdit": {
                    "newText": "char32_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "class",
                "insertText": "class",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " class",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8class",
                "textEdit": {
                    "newText": "class",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "const",
                "insertText": "const",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " const",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8const",
                "textEdit": {
                    "newText": "const",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "const_cast",
                "insertText": "const_cast",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " const_cast<type>(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8const_cast",
                "textEdit": {
                    "newText": "const_cast",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "constexpr",
                "insertText": "constexpr",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " constexpr",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8constexpr",
                "textEdit": {
                    "newText": "constexpr",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "decltype",
                "insertText": "decltype",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " decltype(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8decltype",
                "textEdit": {
                    "newText": "decltype",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "void",
                "filterText": "delete",
                "insertText": "delete",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " delete expression",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8delete",
                "textEdit": {
                    "newText": "delete",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "void",
                "filterText": "delete",
                "insertText": "delete",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " delete [] expression",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8delete",
                "textEdit": {
                    "newText": "delete",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "double",
                "insertText": "double",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " double",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8double",
                "textEdit": {
                    "newText": "double",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "dynamic_cast",
                "insertText": "dynamic_cast",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " dynamic_cast<type>(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8dynamic_cast",
                "textEdit": {
                    "newText": "dynamic_cast",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "enum",
                "insertText": "enum",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " enum",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8enum",
                "textEdit": {
                    "newText": "enum",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "extern",
                "insertText": "extern",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " extern",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8extern",
                "textEdit": {
                    "newText": "extern",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "bool",
                "filterText": "false",
                "insertText": "false",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " false",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8false",
                "textEdit": {
                    "newText": "false",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "float",
                "insertText": "float",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " float",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8float",
                "textEdit": {
                    "newText": "float",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "goto",
                "insertText": "goto",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " goto label;",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8goto",
                "textEdit": {
                    "newText": "goto",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "int",
                "insertText": "int",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " int",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8int",
                "textEdit": {
                    "newText": "int",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "long",
                "insertText": "long",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " long",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8long",
                "textEdit": {
                    "newText": "long",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "new",
                "insertText": "new",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " new type[size](expressions)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8new",
                "textEdit": {
                    "newText": "new",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "new",
                "insertText": "new",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " new type(expressions)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8new",
                "textEdit": {
                    "newText": "new",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "bool",
                "filterText": "noexcept",
                "insertText": "noexcept",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " noexcept(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8noexcept",
                "textEdit": {
                    "newText": "noexcept",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "std::nullptr_t",
                "filterText": "nullptr",
                "insertText": "nullptr",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " nullptr",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8nullptr",
                "textEdit": {
                    "newText": "nullptr",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "operator",
                "insertText": "operator",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " operator",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8operator",
                "textEdit": {
                    "newText": "operator",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "reinterpret_cast",
                "insertText": "reinterpret_cast",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " reinterpret_cast<type>(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8reinterpret_cast",
                "textEdit": {
                    "newText": "reinterpret_cast",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "return",
                "insertText": "return",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " return expression;",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8return",
                "textEdit": {
                    "newText": "return",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "short",
                "insertText": "short",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " short",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8short",
                "textEdit": {
                    "newText": "short",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "signed",
                "insertText": "signed",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " signed",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8signed",
                "textEdit": {
                    "newText": "signed",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "size_t",
                "filterText": "sizeof",
                "insertText": "sizeof",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " sizeof(expression-or-type)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8sizeof",
                "textEdit": {
                    "newText": "sizeof",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "size_t",
                "filterText": "sizeof...",
                "insertText": "sizeof...",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " sizeof...(parameter-pack)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8sizeof...",
                "textEdit": {
                    "newText": "sizeof...",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "static",
                "insertText": "static",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " static",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8static",
                "textEdit": {
                    "newText": "static",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8static_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "static_cast",
                "insertText": "static_cast",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_cast<type>(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8static_cast",
                "textEdit": {
                    "newText": "static_cast",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "struct",
                "insertText": "struct",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " struct",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8struct",
                "textEdit": {
                    "newText": "struct",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "thread_local",
                "insertText": "thread_local",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " thread_local",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8thread_local",
                "textEdit": {
                    "newText": "thread_local",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "void",
                "filterText": "throw",
                "insertText": "throw",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " throw expression",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8throw",
                "textEdit": {
                    "newText": "throw",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "bool",
                "filterText": "true",
                "insertText": "true",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " true",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8true",
                "textEdit": {
                    "newText": "true",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "typedef",
                "insertText": "typedef",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typedef type name;",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8typedef",
                "textEdit": {
                    "newText": "typedef",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "detail": "std::type_info",
                "filterText": "typeid",
                "insertText": "typeid",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typeid(expression-or-type)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8typeid",
                "textEdit": {
                    "newText": "typeid",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "typename",
                "insertText": "typename",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typename name",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8typename",
                "textEdit": {
                    "newText": "typename",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "union",
                "insertText": "union",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " union",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8union",
                "textEdit": {
                    "newText": "union",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "unsigned",
                "insertText": "unsigned",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " unsigned",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8unsigned",
                "textEdit": {
                    "newText": "unsigned",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using name = type;",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8using",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "using namespace",
                "insertText": "using namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using namespace identifier;",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8using namespace",
                "textEdit": {
                    "newText": "using namespace",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "void",
                "insertText": "void",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " void",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8void",
                "textEdit": {
                    "newText": "void",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "volatile",
                "insertText": "volatile",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " volatile",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8volatile",
                "textEdit": {
                    "newText": "volatile",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "wchar_t",
                "insertText": "wchar_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " wchar_t",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8wchar_t",
                "textEdit": {
                    "newText": "wchar_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "type_info",
                "insertText": "type_info",
                "insertTextFormat": 1,
                "kind": 7,
                "label": " type_info",
                "score": 0.73712557554245,
                "sortText": "40c34bbdtype_info",
                "textEdit": {
                    "newText": "type_info",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "_Pragma",
                "insertText": "_Pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _Pragma",
                "score": 0.26848748326301575,
                "sortText": "417688cf_Pragma",
                "textEdit": {
                    "newText": "_Pragma",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__BASE_FILE__",
                "insertText": "__BASE_FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BASE_FILE__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__BASE_FILE__",
                "textEdit": {
                    "newText": "__BASE_FILE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__COUNTER__",
                "insertText": "__COUNTER__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __COUNTER__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__COUNTER__",
                "textEdit": {
                    "newText": "__COUNTER__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__DATE__",
                "insertText": "__DATE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DATE__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__DATE__",
                "textEdit": {
                    "newText": "__DATE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__FILE_NAME__",
                "insertText": "__FILE_NAME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE_NAME__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__FILE_NAME__",
                "textEdit": {
                    "newText": "__FILE_NAME__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__FILE__",
                "insertText": "__FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__FILE__",
                "textEdit": {
                    "newText": "__FILE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__FLT_EVAL_METHOD__",
                "insertText": "__FLT_EVAL_METHOD__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FLT_EVAL_METHOD__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__FLT_EVAL_METHOD__",
                "textEdit": {
                    "newText": "__FLT_EVAL_METHOD__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__INCLUDE_LEVEL__",
                "insertText": "__INCLUDE_LEVEL__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __INCLUDE_LEVEL__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__INCLUDE_LEVEL__",
                "textEdit": {
                    "newText": "__INCLUDE_LEVEL__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__LINE__",
                "insertText": "__LINE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __LINE__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__LINE__",
                "textEdit": {
                    "newText": "__LINE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__TIMESTAMP__",
                "insertText": "__TIMESTAMP__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIMESTAMP__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__TIMESTAMP__",
                "textEdit": {
                    "newText": "__TIMESTAMP__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__TIME__",
                "insertText": "__TIME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIME__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__TIME__",
                "textEdit": {
                    "newText": "__TIME__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__building_module",
                "insertText": "__building_module",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __building_module",
                "score": 0.26848748326301575,
                "sortText": "417688cf__building_module",
                "textEdit": {
                    "newText": "__building_module",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__has_attribute",
                "insertText": "__has_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_attribute",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_attribute",
                "textEdit": {
                    "newText": "__has_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__has_builtin",
                "insertText": "__has_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_builtin",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_builtin",
                "textEdit": {
                    "newText": "__has_builtin",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__has_constexpr_builtin",
                "insertText": "__has_constexpr_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_constexpr_builtin",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_constexpr_builtin",
                "textEdit": {
                    "newText": "__has_constexpr_builtin",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__has_cpp_attribute",
                "insertText": "__has_cpp_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_cpp_attribute",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_cpp_attribute",
                "textEdit": {
                    "newText": "__has_cpp_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__has_declspec_attribute",
                "insertText": "__has_declspec_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_declspec_attribute",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_declspec_attribute",
                "textEdit": {
                    "newText": "__has_declspec_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__has_embed",
                "insertText": "__has_embed",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_embed",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_embed",
                "textEdit": {
                    "newText": "__has_embed",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__has_extension",
                "insertText": "__has_extension",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_extension",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_extension",
                "textEdit": {
                    "newText": "__has_extension",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__has_feature",
                "insertText": "__has_feature",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_feature",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_feature",
                "textEdit": {
                    "newText": "__has_feature",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__has_include",
                "insertText": "__has_include",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_include",
                "textEdit": {
                    "newText": "__has_include",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__has_include_next",
                "insertText": "__has_include_next",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include_next",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_include_next",
                "textEdit": {
                    "newText": "__has_include_next",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__has_warning",
                "insertText": "__has_warning",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_warning",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_warning",
                "textEdit": {
                    "newText": "__has_warning",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__identifier",
                "insertText": "__identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __identifier",
                "score": 0.26848748326301575,
                "sortText": "417688cf__identifier",
                "textEdit": {
                    "newText": "__identifier",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__is_identifier",
                "insertText": "__is_identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_identifier",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_identifier",
                "textEdit": {
                    "newText": "__is_identifier",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_arch",
                "insertText": "__is_target_arch",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_arch",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_arch",
                "textEdit": {
                    "newText": "__is_target_arch",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_environment",
                "insertText": "__is_target_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_environment",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_environment",
                "textEdit": {
                    "newText": "__is_target_environment",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_os",
                "insertText": "__is_target_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_os",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_os",
                "textEdit": {
                    "newText": "__is_target_os",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_environment",
                "insertText": "__is_target_variant_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_environment",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_variant_environment",
                "textEdit": {
                    "newText": "__is_target_variant_environment",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_os",
                "insertText": "__is_target_variant_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_os",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_variant_os",
                "textEdit": {
                    "newText": "__is_target_variant_os",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_vendor",
                "insertText": "__is_target_vendor",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_vendor",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_vendor",
                "textEdit": {
                    "newText": "__is_target_vendor",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            },
            {
                "filterText": "__pragma",
                "insertText": "__pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __pragma",
                "score": 0.26848748326301575,
                "sortText": "417688cf__pragma",
                "textEdit": {
                    "newText": "__pragma",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['var1', 'var2', 'main', 'size_t', '_Nonnull', '_Null_unspecified', '_Nullable', '__FUNCTION__', '__PRETTY_FUNCTION__', '__func__', 'alignas', 'alignof', 'auto', 'bool', 'char', 'char16_t', 'char32_t', 'class', 'const', 'const_cast', 'constexpr', 'decltype', 'delete', 'delete', 'double', 'dynamic_cast', 'enum', 'extern', 'false', 'float', 'goto', 'int', 'long', 'new', 'new', 'noexcept', 'nullptr', 'operator', 'reinterpret_cast', 'return', 'short', 'signed', 'sizeof', 'sizeof...', 'static', 'static_assert', 'static_cast', 'struct', 'thread_local', 'throw', 'true', 'typedef', 'typeid', 'typename', 'union', 'unsigned', 'using', 'using namespace', 'void', 'volatile', 'wchar_t', 'type_info', '_Pragma', '__BASE_FILE__', '__COUNTER__', '__DATE__', '__FILE_NAME__', '__FILE__', '__FLT_EVAL_METHOD__', '__INCLUDE_LEVEL__', '__LINE__', '__TIMESTAMP__', '__TIME__', '__building_module', '__has_attribute', '__has_builtin', '__has_constexpr_builtin', '__has_cpp_attribute', '__has_declspec_attribute', '__has_embed', '__has_extension', '__has_feature', '__has_include', '__has_include_next', '__has_warning', '__identifier', '__is_identifier', '__is_target_arch', '__is_target_environment', '__is_target_os', '__is_target_variant_environment', '__is_target_variant_os', '__is_target_vendor', '__pragma']
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 44
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]]]
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'a'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 13
                    },
                    "start": {
                        "character": 8,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 44
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [11, [4, 7]], [12, [0, 1]], [13, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.8373723030090332,
                "sortText": "415f397astatic_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 2,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['static_assert']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.8373723030090332,
                "sortText": "4105e7a0static_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 3,
                            "line": 12
                        },
                        "start": {
                            "character": 0,
                            "line": 12
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['static_assert']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'ass'",
                "range": {
                    "end": {
                        "character": 3,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 13
                    },
                    "start": {
                        "character": 8,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 46
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [11, [4, 7]], [12, [0, 3]], [13, [8, 10]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdj'",
                "range": {
                    "end": {
                        "character": 5,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 13
                    },
                    "start": {
                        "character": 8,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 48
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [11, [4, 7]], [12, [0, 5]], [13, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdja'",
                "range": {
                    "end": {
                        "character": 8,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 13
                    },
                    "start": {
                        "character": 8,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 51
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [11, [4, 7]], [12, [0, 8]], [13, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasd'",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 13
                    },
                    "start": {
                        "character": 8,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 53
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [11, [4, 7]], [12, [0, 10]], [13, [8, 10]]]
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdj'",
                "range": {
                    "end": {
                        "character": 11,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 13
                    },
                    "start": {
                        "character": 8,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 54
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [11, [4, 7]], [12, [0, 11]], [13, [8, 10]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjd'",
                "range": {
                    "end": {
                        "character": 12,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 13
                    },
                    "start": {
                        "character": 8,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 55
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [11, [4, 7]], [12, [0, 12]], [13, [8, 10]]]
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjds'",
                "range": {
                    "end": {
                        "character": 13,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 13
                    },
                    "start": {
                        "character": 8,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 56
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [11, [4, 7]], [12, [0, 13]], [13, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 13
                    },
                    "start": {
                        "character": 8,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 57
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 14]], [13, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 13
                    },
                    "start": {
                        "character": 0,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 8,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 58
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [13, [0, 14]], [14, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_expression",
                "message": "Expected expression",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 13
                    },
                    "start": {
                        "character": 0,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 17
                    },
                    "start": {
                        "character": 25,
                        "line": 17
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 59
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 1]], [13, [0, 14]], [17, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 13
                    },
                    "start": {
                        "character": 0,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 8,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 60
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [13, [0, 14]], [14, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 13
                    },
                    "start": {
                        "character": 0,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 8,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 61
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [13, [0, 14]], [14, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 13
                    },
                    "start": {
                        "character": 0,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 8,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 63
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [13, [0, 14]], [14, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 13
                    },
                    "start": {
                        "character": 0,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 8,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 66
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [13, [0, 14]], [14, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 13
                    },
                    "start": {
                        "character": 0,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 8,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 67
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [13, [0, 14]], [14, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 13
                    },
                    "start": {
                        "character": 0,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 8,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 69
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [13, [0, 14]], [14, [8, 10]]]
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 13
                    },
                    "start": {
                        "character": 0,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 8,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 70
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [13, [0, 14]], [14, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 13
                    },
                    "start": {
                        "character": 0,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 8,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 71
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [13, [0, 14]], [14, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 14
                    },
                    "start": {
                        "character": 0,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 15
                    },
                    "start": {
                        "character": 8,
                        "line": 15
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 72
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [14, [0, 14]], [15, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_expression",
                "message": "Expected expression",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 13
                    },
                    "start": {
                        "character": 0,
                        "line": 13
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 14
                    },
                    "start": {
                        "character": 0,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 18
                    },
                    "start": {
                        "character": 25,
                        "line": 18
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 74
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [13, [0, 1]], [14, [0, 14]], [18, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 23
                    },
                    "start": {
                        "character": 1,
                        "line": 23
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 23
                    },
                    "start": {
                        "character": 1,
                        "line": 23
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:24:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 76
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [23, [1, 1]], [23, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 24
                    },
                    "start": {
                        "character": 1,
                        "line": 24
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 24
                    },
                    "start": {
                        "character": 1,
                        "line": 24
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:25:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 81
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [24, [1, 1]], [24, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 24
                    },
                    "start": {
                        "character": 1,
                        "line": 24
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 24
                    },
                    "start": {
                        "character": 1,
                        "line": 24
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:25:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 84
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [24, [1, 1]], [24, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 24
                    },
                    "start": {
                        "character": 1,
                        "line": 24
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 24
                    },
                    "start": {
                        "character": 1,
                        "line": 24
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:25:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 86
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [24, [1, 1]], [24, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 24
                    },
                    "start": {
                        "character": 1,
                        "line": 24
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 24
                    },
                    "start": {
                        "character": 1,
                        "line": 24
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:25:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 87
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [24, [1, 1]], [24, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 25
                    },
                    "start": {
                        "character": 1,
                        "line": 25
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 25
                    },
                    "start": {
                        "character": 1,
                        "line": 25
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:26:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 89
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [25, [1, 1]], [25, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 25
                    },
                    "start": {
                        "character": 1,
                        "line": 25
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 25
                    },
                    "start": {
                        "character": 1,
                        "line": 25
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:26:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 91
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [25, [1, 1]], [25, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'assdjdjasdjdsa'",
                "range": {
                    "end": {
                        "character": 14,
                        "line": 16
                    },
                    "start": {
                        "character": 0,
                        "line": 16
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 17
                    },
                    "start": {
                        "character": 8,
                        "line": 17
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 92
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [16, [0, 14]], [17, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "detail": "int",
                "filterText": "var1",
                "insertText": "var1",
                "insertTextFormat": 1,
                "kind": 6,
                "label": " var1",
                "score": 1.3930001258850098,
                "sortText": "404db22cvar1",
                "textEdit": {
                    "newText": "var1",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "int",
                "filterText": "var2",
                "insertText": "var2",
                "insertTextFormat": 1,
                "kind": 6,
                "label": " var2",
                "score": 1.3930001258850098,
                "sortText": "404db22cvar2",
                "textEdit": {
                    "newText": "var2",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "int",
                "filterText": "main",
                "insertText": "main",
                "insertTextFormat": 1,
                "kind": 3,
                "label": " main()",
                "score": 1.0087924003601074,
                "sortText": "407edfe4main",
                "textEdit": {
                    "newText": "main",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "size_t",
                "insertText": "size_t",
                "insertTextFormat": 1,
                "kind": 8,
                "label": " size_t",
                "score": 0.9800145626068115,
                "sortText": "40851dc4size_t",
                "textEdit": {
                    "newText": "size_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "_Nonnull",
                "insertText": "_Nonnull",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nonnull",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8_Nonnull",
                "textEdit": {
                    "newText": "_Nonnull",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "_Null_unspecified",
                "insertText": "_Null_unspecified",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Null_unspecified",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8_Null_unspecified",
                "textEdit": {
                    "newText": "_Null_unspecified",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "_Nullable",
                "insertText": "_Nullable",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " _Nullable",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8_Nullable",
                "textEdit": {
                    "newText": "_Nullable",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__FUNCTION__",
                "insertText": "__FUNCTION__",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " __FUNCTION__",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8__FUNCTION__",
                "textEdit": {
                    "newText": "__FUNCTION__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__PRETTY_FUNCTION__",
                "insertText": "__PRETTY_FUNCTION__",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " __PRETTY_FUNCTION__",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8__PRETTY_FUNCTION__",
                "textEdit": {
                    "newText": "__PRETTY_FUNCTION__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__func__",
                "insertText": "__func__",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " __func__",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8__func__",
                "textEdit": {
                    "newText": "__func__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "alignas",
                "insertText": "alignas",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignas(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8alignas",
                "textEdit": {
                    "newText": "alignas",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "size_t",
                "filterText": "alignof",
                "insertText": "alignof",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignof(type)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8alignof",
                "textEdit": {
                    "newText": "alignof",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "auto",
                "insertText": "auto",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " auto",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8auto",
                "textEdit": {
                    "newText": "auto",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "bool",
                "insertText": "bool",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " bool",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8bool",
                "textEdit": {
                    "newText": "bool",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "char",
                "insertText": "char",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8char",
                "textEdit": {
                    "newText": "char",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "char16_t",
                "insertText": "char16_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char16_t",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8char16_t",
                "textEdit": {
                    "newText": "char16_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "char32_t",
                "insertText": "char32_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " char32_t",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8char32_t",
                "textEdit": {
                    "newText": "char32_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "class",
                "insertText": "class",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " class",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8class",
                "textEdit": {
                    "newText": "class",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "const",
                "insertText": "const",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " const",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8const",
                "textEdit": {
                    "newText": "const",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "const_cast",
                "insertText": "const_cast",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " const_cast<type>(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8const_cast",
                "textEdit": {
                    "newText": "const_cast",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "constexpr",
                "insertText": "constexpr",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " constexpr",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8constexpr",
                "textEdit": {
                    "newText": "constexpr",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "decltype",
                "insertText": "decltype",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " decltype(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8decltype",
                "textEdit": {
                    "newText": "decltype",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "void",
                "filterText": "delete",
                "insertText": "delete",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " delete expression",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8delete",
                "textEdit": {
                    "newText": "delete",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "void",
                "filterText": "delete",
                "insertText": "delete",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " delete [] expression",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8delete",
                "textEdit": {
                    "newText": "delete",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "double",
                "insertText": "double",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " double",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8double",
                "textEdit": {
                    "newText": "double",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "dynamic_cast",
                "insertText": "dynamic_cast",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " dynamic_cast<type>(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8dynamic_cast",
                "textEdit": {
                    "newText": "dynamic_cast",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "enum",
                "insertText": "enum",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " enum",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8enum",
                "textEdit": {
                    "newText": "enum",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "extern",
                "insertText": "extern",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " extern",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8extern",
                "textEdit": {
                    "newText": "extern",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "bool",
                "filterText": "false",
                "insertText": "false",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " false",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8false",
                "textEdit": {
                    "newText": "false",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "float",
                "insertText": "float",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " float",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8float",
                "textEdit": {
                    "newText": "float",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "goto",
                "insertText": "goto",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " goto label;",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8goto",
                "textEdit": {
                    "newText": "goto",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "int",
                "insertText": "int",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " int",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8int",
                "textEdit": {
                    "newText": "int",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "long",
                "insertText": "long",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " long",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8long",
                "textEdit": {
                    "newText": "long",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "new",
                "insertText": "new",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " new type[size](expressions)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8new",
                "textEdit": {
                    "newText": "new",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "new",
                "insertText": "new",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " new type(expressions)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8new",
                "textEdit": {
                    "newText": "new",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "bool",
                "filterText": "noexcept",
                "insertText": "noexcept",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " noexcept(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8noexcept",
                "textEdit": {
                    "newText": "noexcept",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "std::nullptr_t",
                "filterText": "nullptr",
                "insertText": "nullptr",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " nullptr",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8nullptr",
                "textEdit": {
                    "newText": "nullptr",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "operator",
                "insertText": "operator",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " operator",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8operator",
                "textEdit": {
                    "newText": "operator",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "reinterpret_cast",
                "insertText": "reinterpret_cast",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " reinterpret_cast<type>(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8reinterpret_cast",
                "textEdit": {
                    "newText": "reinterpret_cast",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "return",
                "insertText": "return",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " return expression;",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8return",
                "textEdit": {
                    "newText": "return",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "short",
                "insertText": "short",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " short",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8short",
                "textEdit": {
                    "newText": "short",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "signed",
                "insertText": "signed",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " signed",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8signed",
                "textEdit": {
                    "newText": "signed",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "size_t",
                "filterText": "sizeof",
                "insertText": "sizeof",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " sizeof(expression-or-type)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8sizeof",
                "textEdit": {
                    "newText": "sizeof",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "size_t",
                "filterText": "sizeof...",
                "insertText": "sizeof...",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " sizeof...(parameter-pack)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8sizeof...",
                "textEdit": {
                    "newText": "sizeof...",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "static",
                "insertText": "static",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " static",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8static",
                "textEdit": {
                    "newText": "static",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8static_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "static_cast",
                "insertText": "static_cast",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_cast<type>(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8static_cast",
                "textEdit": {
                    "newText": "static_cast",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "struct",
                "insertText": "struct",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " struct",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8struct",
                "textEdit": {
                    "newText": "struct",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "thread_local",
                "insertText": "thread_local",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " thread_local",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8thread_local",
                "textEdit": {
                    "newText": "thread_local",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "void",
                "filterText": "throw",
                "insertText": "throw",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " throw expression",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8throw",
                "textEdit": {
                    "newText": "throw",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "bool",
                "filterText": "true",
                "insertText": "true",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " true",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8true",
                "textEdit": {
                    "newText": "true",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "typedef",
                "insertText": "typedef",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typedef type name;",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8typedef",
                "textEdit": {
                    "newText": "typedef",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "std::type_info",
                "filterText": "typeid",
                "insertText": "typeid",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typeid(expression-or-type)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8typeid",
                "textEdit": {
                    "newText": "typeid",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "typename",
                "insertText": "typename",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " typename name",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8typename",
                "textEdit": {
                    "newText": "typename",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "union",
                "insertText": "union",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " union",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8union",
                "textEdit": {
                    "newText": "union",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "unsigned",
                "insertText": "unsigned",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " unsigned",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8unsigned",
                "textEdit": {
                    "newText": "unsigned",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "using",
                "insertText": "using",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using name = type;",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8using",
                "textEdit": {
                    "newText": "using",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "using namespace",
                "insertText": "using namespace",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " using namespace identifier;",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8using namespace",
                "textEdit": {
                    "newText": "using namespace",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "void",
                "insertText": "void",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " void",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8void",
                "textEdit": {
                    "newText": "void",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "volatile",
                "insertText": "volatile",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " volatile",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8volatile",
                "textEdit": {
                    "newText": "volatile",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "wchar_t",
                "insertText": "wchar_t",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " wchar_t",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8wchar_t",
                "textEdit": {
                    "newText": "wchar_t",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "type_info",
                "insertText": "type_info",
                "insertTextFormat": 1,
                "kind": 7,
                "label": " type_info",
                "score": 0.73712557554245,
                "sortText": "40c34bbdtype_info",
                "textEdit": {
                    "newText": "type_info",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "_Pragma",
                "insertText": "_Pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " _Pragma",
                "score": 0.26848748326301575,
                "sortText": "417688cf_Pragma",
                "textEdit": {
                    "newText": "_Pragma",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__BASE_FILE__",
                "insertText": "__BASE_FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __BASE_FILE__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__BASE_FILE__",
                "textEdit": {
                    "newText": "__BASE_FILE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__COUNTER__",
                "insertText": "__COUNTER__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __COUNTER__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__COUNTER__",
                "textEdit": {
                    "newText": "__COUNTER__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__DATE__",
                "insertText": "__DATE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __DATE__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__DATE__",
                "textEdit": {
                    "newText": "__DATE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__FILE_NAME__",
                "insertText": "__FILE_NAME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE_NAME__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__FILE_NAME__",
                "textEdit": {
                    "newText": "__FILE_NAME__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__FILE__",
                "insertText": "__FILE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FILE__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__FILE__",
                "textEdit": {
                    "newText": "__FILE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__FLT_EVAL_METHOD__",
                "insertText": "__FLT_EVAL_METHOD__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __FLT_EVAL_METHOD__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__FLT_EVAL_METHOD__",
                "textEdit": {
                    "newText": "__FLT_EVAL_METHOD__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__INCLUDE_LEVEL__",
                "insertText": "__INCLUDE_LEVEL__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __INCLUDE_LEVEL__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__INCLUDE_LEVEL__",
                "textEdit": {
                    "newText": "__INCLUDE_LEVEL__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__LINE__",
                "insertText": "__LINE__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __LINE__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__LINE__",
                "textEdit": {
                    "newText": "__LINE__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__TIMESTAMP__",
                "insertText": "__TIMESTAMP__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIMESTAMP__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__TIMESTAMP__",
                "textEdit": {
                    "newText": "__TIMESTAMP__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__TIME__",
                "insertText": "__TIME__",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __TIME__",
                "score": 0.26848748326301575,
                "sortText": "417688cf__TIME__",
                "textEdit": {
                    "newText": "__TIME__",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__building_module",
                "insertText": "__building_module",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __building_module",
                "score": 0.26848748326301575,
                "sortText": "417688cf__building_module",
                "textEdit": {
                    "newText": "__building_module",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__has_attribute",
                "insertText": "__has_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_attribute",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_attribute",
                "textEdit": {
                    "newText": "__has_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__has_builtin",
                "insertText": "__has_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_builtin",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_builtin",
                "textEdit": {
                    "newText": "__has_builtin",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__has_constexpr_builtin",
                "insertText": "__has_constexpr_builtin",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_constexpr_builtin",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_constexpr_builtin",
                "textEdit": {
                    "newText": "__has_constexpr_builtin",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__has_cpp_attribute",
                "insertText": "__has_cpp_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_cpp_attribute",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_cpp_attribute",
                "textEdit": {
                    "newText": "__has_cpp_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__has_declspec_attribute",
                "insertText": "__has_declspec_attribute",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_declspec_attribute",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_declspec_attribute",
                "textEdit": {
                    "newText": "__has_declspec_attribute",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__has_embed",
                "insertText": "__has_embed",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_embed",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_embed",
                "textEdit": {
                    "newText": "__has_embed",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__has_extension",
                "insertText": "__has_extension",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_extension",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_extension",
                "textEdit": {
                    "newText": "__has_extension",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__has_feature",
                "insertText": "__has_feature",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_feature",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_feature",
                "textEdit": {
                    "newText": "__has_feature",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__has_include",
                "insertText": "__has_include",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_include",
                "textEdit": {
                    "newText": "__has_include",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__has_include_next",
                "insertText": "__has_include_next",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_include_next",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_include_next",
                "textEdit": {
                    "newText": "__has_include_next",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__has_warning",
                "insertText": "__has_warning",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __has_warning",
                "score": 0.26848748326301575,
                "sortText": "417688cf__has_warning",
                "textEdit": {
                    "newText": "__has_warning",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__identifier",
                "insertText": "__identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __identifier",
                "score": 0.26848748326301575,
                "sortText": "417688cf__identifier",
                "textEdit": {
                    "newText": "__identifier",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__is_identifier",
                "insertText": "__is_identifier",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_identifier",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_identifier",
                "textEdit": {
                    "newText": "__is_identifier",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_arch",
                "insertText": "__is_target_arch",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_arch",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_arch",
                "textEdit": {
                    "newText": "__is_target_arch",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_environment",
                "insertText": "__is_target_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_environment",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_environment",
                "textEdit": {
                    "newText": "__is_target_environment",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_os",
                "insertText": "__is_target_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_os",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_os",
                "textEdit": {
                    "newText": "__is_target_os",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_environment",
                "insertText": "__is_target_variant_environment",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_environment",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_variant_environment",
                "textEdit": {
                    "newText": "__is_target_variant_environment",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_variant_os",
                "insertText": "__is_target_variant_os",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_variant_os",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_variant_os",
                "textEdit": {
                    "newText": "__is_target_variant_os",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__is_target_vendor",
                "insertText": "__is_target_vendor",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __is_target_vendor",
                "score": 0.26848748326301575,
                "sortText": "417688cf__is_target_vendor",
                "textEdit": {
                    "newText": "__is_target_vendor",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "__pragma",
                "insertText": "__pragma",
                "insertTextFormat": 1,
                "kind": 1,
                "label": " __pragma",
                "score": 0.26848748326301575,
                "sortText": "417688cf__pragma",
                "textEdit": {
                    "newText": "__pragma",
                    "range": {
                        "end": {
                            "character": 0,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['var1', 'var2', 'main', 'size_t', '_Nonnull', '_Null_unspecified', '_Nullable', '__FUNCTION__', '__PRETTY_FUNCTION__', '__func__', 'alignas', 'alignof', 'auto', 'bool', 'char', 'char16_t', 'char32_t', 'class', 'const', 'const_cast', 'constexpr', 'decltype', 'delete', 'delete', 'double', 'dynamic_cast', 'enum', 'extern', 'false', 'float', 'goto', 'int', 'long', 'new', 'new', 'noexcept', 'nullptr', 'operator', 'reinterpret_cast', 'return', 'short', 'signed', 'sizeof', 'sizeof...', 'static', 'static_assert', 'static_cast', 'struct', 'thread_local', 'throw', 'true', 'typedef', 'typeid', 'typename', 'union', 'unsigned', 'using', 'using namespace', 'void', 'volatile', 'wchar_t', 'type_info', '_Pragma', '__BASE_FILE__', '__COUNTER__', '__DATE__', '__FILE_NAME__', '__FILE__', '__FLT_EVAL_METHOD__', '__INCLUDE_LEVEL__', '__LINE__', '__TIMESTAMP__', '__TIME__', '__building_module', '__has_attribute', '__has_builtin', '__has_constexpr_builtin', '__has_cpp_attribute', '__has_declspec_attribute', '__has_embed', '__has_extension', '__has_feature', '__has_include', '__has_include_next', '__has_warning', '__identifier', '__is_identifier', '__is_target_arch', '__is_target_environment', '__is_target_os', '__is_target_variant_environment', '__is_target_variant_os', '__is_target_vendor', '__pragma']
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "alignas",
                "insertText": "alignas",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignas(expression)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8alignas",
                "textEdit": {
                    "newText": "alignas",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "detail": "size_t",
                "filterText": "alignof",
                "insertText": "alignof",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " alignof(type)",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8alignof",
                "textEdit": {
                    "newText": "alignof",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "auto",
                "insertText": "auto",
                "insertTextFormat": 1,
                "kind": 14,
                "label": " auto",
                "score": 0.8373723030090332,
                "sortText": "40a9a1f8auto",
                "textEdit": {
                    "newText": "auto",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            },
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.8373723030090332,
                "sortText": "80000000static_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 1,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['alignas', 'alignof', 'auto', 'static_assert']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": [
            {
                "filterText": "static_assert",
                "insertText": "static_assert",
                "insertTextFormat": 1,
                "kind": 15,
                "label": " static_assert(expression, message);",
                "score": 0.8373723030090332,
                "sortText": "415f397astatic_assert",
                "textEdit": {
                    "newText": "static_assert",
                    "range": {
                        "end": {
                            "character": 2,
                            "line": 16
                        },
                        "start": {
                            "character": 0,
                            "line": 16
                        }
                    }
                }
            }
        ]
    }
}
Received a completion response from LSP.
Completions received: ['static_assert']
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'asjhg'",
                "range": {
                    "end": {
                        "character": 5,
                        "line": 16
                    },
                    "start": {
                        "character": 0,
                        "line": 16
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 8,
                        "line": 18
                    },
                    "start": {
                        "character": 4,
                        "line": 18
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 98
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [16, [0, 5]], [18, [4, 8]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'asjhgdhj'",
                "range": {
                    "end": {
                        "character": 8,
                        "line": 16
                    },
                    "start": {
                        "character": 0,
                        "line": 16
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 8,
                        "line": 18
                    },
                    "start": {
                        "character": 4,
                        "line": 18
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 101
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [16, [0, 8]], [18, [4, 8]], [21, [25, 29]]]
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 10,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 103
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [14, [10, 10]], [21, [25, 29]]]
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": {
        "contents": {
            "kind": "plaintext",
            "value": "variable dahgfgshga\n\nType: int\n\n// In main\npublic: int dahgfgshga"
        },
        "range": {
            "end": {
                "character": 10,
                "line": 14
            },
            "start": {
                "character": 0,
                "line": 14
            }
        }
    }
}
Received hover response.
Hover text: variable dahgfgshga

Type: int

// In main
public: int dahgfgshga
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 18
                    },
                    "start": {
                        "character": 8,
                        "line": 18
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 105
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [18, [8, 10]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 10,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 113
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [14, [10, 10]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 15
                    },
                    "start": {
                        "character": 0,
                        "line": 15
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 115
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [15, [0, 1]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 15
                    },
                    "start": {
                        "character": 0,
                        "line": 15
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 116
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [15, [0, 1]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 15
                    },
                    "start": {
                        "character": 0,
                        "line": 15
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 22
                    },
                    "start": {
                        "character": 25,
                        "line": 22
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 117
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [15, [0, 1]], [22, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 15
                    },
                    "start": {
                        "character": 0,
                        "line": 15
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 118
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [15, [0, 1]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 15
                    },
                    "start": {
                        "character": 0,
                        "line": 15
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 119
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [15, [0, 1]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 10,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 121
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [14, [10, 10]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 15
                    },
                    "start": {
                        "character": 0,
                        "line": 15
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 124
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [15, [0, 1]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 15
                    },
                    "start": {
                        "character": 0,
                        "line": 15
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 126
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [15, [0, 1]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 15
                    },
                    "start": {
                        "character": 0,
                        "line": 15
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 127
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [15, [0, 1]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 10,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 128
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [14, [10, 10]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 15
                    },
                    "start": {
                        "character": 0,
                        "line": 15
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 21
                    },
                    "start": {
                        "character": 25,
                        "line": 21
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 130
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [15, [0, 1]], [21, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 26
                    },
                    "start": {
                        "character": 1,
                        "line": 26
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 26
                    },
                    "start": {
                        "character": 1,
                        "line": 26
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 26
                    },
                    "start": {
                        "character": 1,
                        "line": 26
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:27:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 132
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [26, [1, 1]], [26, [1, 1]], [26, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:28:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 136
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [27, [1, 1]], [27, [1, 1]], [27, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:28:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 137
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [27, [1, 1]], [27, [1, 1]], [27, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:28:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 141
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [27, [1, 1]], [27, [1, 1]], [27, [1, 1]]]
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:28:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 142
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [27, [1, 1]], [27, [1, 1]], [27, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 27
                    },
                    "start": {
                        "character": 1,
                        "line": 27
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:28:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 143
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [27, [1, 1]], [27, [1, 1]], [27, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 28
                    },
                    "start": {
                        "character": 1,
                        "line": 28
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 28
                    },
                    "start": {
                        "character": 1,
                        "line": 28
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 28
                    },
                    "start": {
                        "character": 1,
                        "line": 28
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:29:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 145
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [28, [1, 1]], [28, [1, 1]], [28, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unterminated_block_comment",
                "message": "Unterminated /* comment",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 28
                    },
                    "start": {
                        "character": 1,
                        "line": 28
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 28
                    },
                    "start": {
                        "character": 1,
                        "line": 28
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected",
                "message": "Expected '}'\n\ntmpru45x19n.cpp:10:1: note: to match this '{'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 28
                    },
                    "start": {
                        "character": 1,
                        "line": 28
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "message": "To match this '{'\n\ntmpru45x19n.cpp:29:2: error: expected '}'",
                "range": {
                    "end": {
                        "character": 1,
                        "line": 9
                    },
                    "start": {
                        "character": 0,
                        "line": 9
                    }
                },
                "severity": 3
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 148
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [28, [1, 1]], [28, [1, 1]], [28, [1, 1]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 10,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 23
                    },
                    "start": {
                        "character": 25,
                        "line": 23
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 151
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [14, [10, 10]], [23, [25, 29]]]
Updated temporary file C:\Users\ANN\AppData\Local\Temp\tmpru45x19n.cpp
Request sent with method textDocument/didChange
Request sent with method textDocument/completion
Handling response from LSP
Received response: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": {
        "isIncomplete": false,
        "items": []
    }
}
Received a completion response from LSP.
Completions received: []
Handling response from LSP
Received response: {
    "jsonrpc": "2.0",
    "method": "textDocument/publishDiagnostics",
    "params": {
        "diagnostics": [
            {
                "code": "pp_file_not_found",
                "message": "'iostream' file not found",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 1
                    },
                    "start": {
                        "character": 9,
                        "line": 1
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "ext_using_undefined_std",
                "message": "Using directive refers to implicitly-defined namespace 'std'",
                "range": {
                    "end": {
                        "character": 19,
                        "line": 3
                    },
                    "start": {
                        "character": 16,
                        "line": 3
                    }
                },
                "severity": 2,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 10
                    },
                    "start": {
                        "character": 4,
                        "line": 10
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cin'",
                "range": {
                    "end": {
                        "character": 7,
                        "line": 11
                    },
                    "start": {
                        "character": 4,
                        "line": 11
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "unknown_typename",
                "message": "Unknown type name 'sdsadssad'",
                "range": {
                    "end": {
                        "character": 9,
                        "line": 12
                    },
                    "start": {
                        "character": 0,
                        "line": 12
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "expected_semi_declaration",
                "message": "Expected ';' at end of declaration (fix available)",
                "range": {
                    "end": {
                        "character": 10,
                        "line": 14
                    },
                    "start": {
                        "character": 10,
                        "line": 14
                    }
                },
                "severity": 1,
                "source": "clang"
            },
            {
                "code": "undeclared_var_use",
                "message": "Use of undeclared identifier 'cout'",
                "range": {
                    "end": {
                        "character": 29,
                        "line": 23
                    },
                    "start": {
                        "character": 25,
                        "line": 23
                    }
                },
                "severity": 1,
                "source": "clang"
            }
        ],
        "uri": "file://C:/Users/ANN/AppData/Local/Temp/tmpru45x19n.cpp",
        "version": 152
    }
}
Diagnostics received from LSP.
Errors received: [[1, [9, 19]], [10, [4, 7]], [11, [4, 7]], [12, [0, 9]], [14, [10, 10]], [23, [25, 29]]]
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
Received hover response.
Hover response does not contain 'contents'.
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": {
        "contents": {
            "kind": "plaintext",
            "value": "variable dahgfgshga\n\nType: int\n\n// In main\npublic: int dahgfgshga"
        },
        "range": {
            "end": {
                "character": 10,
                "line": 14
            },
            "start": {
                "character": 0,
                "line": 14
            }
        }
    }
}
Received hover response.
Hover text: variable dahgfgshga

Type: int

// In main
public: int dahgfgshga
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": {
        "contents": {
            "kind": "plaintext",
            "value": "variable dahgfgshga\n\nType: int\n\n// In main\npublic: int dahgfgshga"
        },
        "range": {
            "end": {
                "character": 9,
                "line": 12
            },
            "start": {
                "character": 0,
                "line": 12
            }
        }
    }
}
Received hover response.
Hover text: variable dahgfgshga

Type: int

// In main
public: int dahgfgshga
Request sent with method textDocument/hover
Handling response from LSP
Received response: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": {
        "contents": {
            "kind": "plaintext",
            "value": "variable dahgfgshga\n\nType: int\n\n// In main\npublic: int dahgfgshga"
        },
        "range": {
            "end": {
                "character": 9,
                "line": 12
            },
            "start": {
                "character": 0,
                "line": 12
            }
        }
    }
}
Received hover response.
Hover text: variable dahgfgshga

Type: int

// In main
public: int dahgfgshga
